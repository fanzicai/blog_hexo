<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[docker容器动态扩容]]></title>
      <url>http://my.fanzicai.com/Program/20190808-docker%E5%AE%B9%E5%99%A8%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9.html</url>
      <content type="html"><![CDATA[<p>Docker采用DeviceMapper作为存储驱动时，一般默认容器大小不超过10G。</p>
<p> 本文适用于使用DeviceMapper的Docker版本，不适于与其他如Overlay2的版本。<br><a id="more"></a></p>
<blockquote>
<p>先获取容器对应的磁盘映射空间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-253:0-4294967424-e8e2398e70742a18a0affbc894dbc853432b7c0ef1db4a86e2a070ea0b57c879</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>获取扇区信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dmsetup table docker-253:0-4294967424-e8e2398e70742a18a0affbc894dbc853432b7c0ef1db4a86e2a070ea0b57c879</span><br><span class="line">0 10971520  thin  253:3 32</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>编写脚本gitlab_resume.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo 0 104857600 thin  253:3 32 | dmsetup load docker-253:0-4294967424-e8e2398e70742a18a0affbc894dbc853432b7c0ef1db4a86e2a070ea0b57c879</span><br><span class="line">dmsetup resume docker-253:0-4294967424-e8e2398e70742a18a0affbc894dbc853432b7c0ef1db4a86e2a070ea0b57c879</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Win7-x64环境虚拟机安装OS/X-10.11]]></title>
      <url>http://my.fanzicai.com/Program/20170215-Win7-x64%E7%8E%AF%E5%A2%83%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85OS-X-10-11.html</url>
      <content type="html"><![CDATA[<p>本文描述在Windows7 64系统上的VMware虚拟环境中安装OS/X的10.11操作系统。</p>
<a id="more"></a>
<h2 id="1-工具"><a href="#1-工具" class="headerlink" title="1.工具"></a><strong>1.工具</strong></h2><ul>
<li>VMware 12</li>
<li>unlocker 207</li>
<li>cdr格式的OS/X安装包</li>
</ul>
<hr>
<h2 id="2-关键步骤"><a href="#2-关键步骤" class="headerlink" title="2.关键步骤"></a><strong>2.关键步骤</strong></h2><ul>
<li><p>unlocker 207</p>
<blockquote>
<p>安装前，确保VMware已关闭<br>采用“管理员”执行.cmd文件<br>安装成功，在VMware的新建列表中会出现Apple OS选项</p>
</blockquote>
</li>
<li><p>新建虚拟机</p>
<blockquote>
<p>选用EFI，非BIOS<br>内存不少于2048，建议4096<br>硬盘不少于40G，建议80，可选用SATA，不要求SCSI<br>直接选择cdr文件<br>USB设备设置时，勾选“显示所有USB设备”，并采用USB2.0<br>开启虚拟机之前，编辑vmx文件，添加一行配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smc.version = 0</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>系统安装</p>
<blockquote>
<p>安装时，需先进行磁盘初始化，在“实用工具”-“硬盘工具”中进行<br>键盘布局，选择“美国（PC）”</p>
</blockquote>
</li>
</ul>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2017 </tag>
            
            <tag> VMware </tag>
            
            <tag> OS/X </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker访问主机目录设置]]></title>
      <url>http://my.fanzicai.com/Program/20161108-docker%E8%AE%BF%E9%97%AE%E4%B8%BB%E6%9C%BA%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE.html</url>
      <content type="html"><![CDATA[<p>Docker映射宿主机目录时，须配置该目录权限，否则在SELinux下无法访问。</p>
<a id="more"></a>
<blockquote>
<p>配置方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcon -Rt svirt_sandbox_file_t /my/own/datadir</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> Docker </tag>
            
            <tag> SELinux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker国内镜像]]></title>
      <url>http://my.fanzicai.com/Program/20161108-docker%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F.html</url>
      <content type="html"><![CDATA[<p>目前因为某些原因，docker pull采用默认镜像地址时非常慢，故建议选用国内镜像。</p>
<a id="more"></a>
<blockquote>
<p>本文选用了比较方便的阿里云镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://eoomcem8.mirror.aliyuncs.com</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>在CentOS7中，修改文件/etc/sysconfig/config，option增加下述内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--registry-mirror=https://eoomcem8.mirror.aliyuncs.com</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS中MySQL远程访问]]></title>
      <url>http://my.fanzicai.com/Program/20161101-CentOS%E4%B8%ADMySQL%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE.html</url>
      <content type="html"><![CDATA[<p>本文描述如何在CentOS7中允许MySQL的端口。</p>
<a id="more"></a>
<h2 id="1、方法一"><a href="#1、方法一" class="headerlink" title="1、方法一"></a><strong>1、方法一</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=mysql</span><br></pre></td></tr></table></figure>
<blockquote>
<p>永久改变<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-service=mysql</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="2、方法二"><a href="#2、方法二" class="headerlink" title="2、方法二"></a><strong>2、方法二</strong></h2><p>采用iptables，前提是要先安装iptables相关</p>
<blockquote>
<p>相关命令有<br>添加端口3306<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>查看状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n  //或者 service iptables status</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>删除端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -D INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>永久保存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables save</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p> 或者<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/iptables save</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>或者编辑配置文件</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables //在该文件中加入下面这条规则也是可以生效的  </span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 2016 </tag>
            
            <tag> Firewall </tag>
            
            <tag> Iptables </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[openssl证书格式转换]]></title>
      <url>http://my.fanzicai.com/Program/20161101-openssl%E8%AF%81%E4%B9%A6%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2.html</url>
      <content type="html"><![CDATA[<p>本文描述ssl key的格式转换方法。</p>
<a id="more"></a>
<h2 id="1、基本命令"><a href="#1、基本命令" class="headerlink" title="1、基本命令"></a><strong>1、基本命令</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in cert.pem -inform PEM -out cert.der -outform DER</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> OpenSSL </tag>
            
            <tag> X509 </tag>
            
            <tag> Der </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat配置https]]></title>
      <url>http://my.fanzicai.com/Program/20161031-Tomcat%E9%85%8D%E7%BD%AEhttps.html</url>
      <content type="html"><![CDATA[<p>本文描述Tomcat配置https连接的方式之一。</p>
<a id="more"></a>
<h2 id="1、Key生成"><a href="#1、Key生成" class="headerlink" title="1、Key生成"></a><strong>1、Key生成</strong></h2><ul>
<li>生成ssh key<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA -keystore /path/to/my/keystore</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2、配置"><a href="#2、配置" class="headerlink" title="2、配置"></a><strong>2、配置</strong></h2><ul>
<li>/conf/server.xml<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span><br><span class="line">              maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line">              keystoreFile=&quot;$&#123;user.home&#125;/.keystore&quot; keystorePass=&quot;changeit&quot;</span><br><span class="line">              clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; /&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> Tomcat </tag>
            
            <tag> SSL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GitLab自动备份by crond]]></title>
      <url>http://my.fanzicai.com/Program/20160809-GitLab%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDby-crond.html</url>
      <content type="html"><![CDATA[<p>本文涉及的GitLab为中文版，采用<a href="https://hub.docker.com/r/fanzi/gitlab-cn/" target="_blank" rel="noopener">fanzi/gitlab-cn</a>创建。<br>可参见<a href="http://www.fanzicai.com/blog_hexo/Program/20160602-Dockerfile%E4%B9%8Bfanzi-gitlab-cn.html" target="_blank" rel="noopener">Dockerfile之fanzi/gitlab-cn</a></p>
<a id="more"></a>
<h2 id="1-备份"><a href="#1-备份" class="headerlink" title="1. 备份"></a><strong>1. 备份</strong></h2><ul>
<li><p>在旧GitLab服务器上执行</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab</span><br><span class="line">bundle exec rake gitlab:backup:create RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>备份文件所在目录</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab/tmp/backups/</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-还原"><a href="#2-还原" class="headerlink" title="2. 还原"></a><strong>2. 还原</strong></h2><blockquote>
<p>将原GitLab服务器的备份文件（*.tar）拷贝到新GitLab服务器的备份目录（同旧服务器）<br>重要！修改脚本文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /home/git/gitlab/lib/tasks/gitlab/db.rask</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tables.each &#123; |t| connection.execute(&quot;DROP TABLE IF EXISTS #&#123;t&#125; CASCADE&quot;) &#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tables.each &#123; |t| connection.execute(&quot;DROP TABLE IF EXISTS `#&#123;t&#125;` CASCADE&quot;) &#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>还原命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:backup:restore RAILS_ENV=production</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>执行还原命令之前，须执行初始化并关闭gitlab服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it gitlab-new /bin/bash -c /home/git/gitlab-init.sh</span><br><span class="line">/etc/init.d/gitlab stop</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="3-附录"><a href="#3-附录" class="headerlink" title="3. 附录"></a><strong>3. 附录</strong></h2><ul>
<li>docker mysql<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart always --name mysql-new -e MYSQL_ROOT_PASSWORD=123 -d mysql/mysql-server:latest --character-set-server=utf8 --collation-server=utf8_general_ci</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>进入mysql控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql-new /bin/bash</span><br><span class="line">mysql -uroot -p123</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>创建git用户及database，本文git用户密码设置为git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &apos;git&apos;@&apos;%&apos; IDENTIFIED BY &apos;git&apos;;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;</span><br><span class="line">GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, CREATE TEMPORARY TABLES, DROP, INDEX, ALTER, LOCK TABLES ON `gitlabhq_production`.* TO &apos;git&apos;@&apos;%&apos;;</span><br><span class="line">flush privileges;</span><br><span class="line">\q</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>docker gitlab<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --detach --restart always --link mysql-new:mysql -p 80:80 -p 22:22 --name gitlab-new fanzi/gitlab-cn</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="4-自动化"><a href="#4-自动化" class="headerlink" title="4. 自动化"></a><strong>4. 自动化</strong></h2><ul>
<li><p>docker gitlab backup脚本</p>
<blockquote>
<p>/home/git/gitlab-backup.sh</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">cd /home/git/gitlab</span><br><span class="line">bundle exec rake gitlab:backup:create RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>crond配置文件</p>
<blockquote>
<p>/root/docker-gitlab-bak/gitlab.cron</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"># For details see man 4 crontabs</span><br><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (0 - 59)</span><br><span class="line"># |  .------------- hour (0 - 23)</span><br><span class="line"># |  |  .---------- day of month (1 - 31)</span><br><span class="line"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># |  |  |  |  |</span><br><span class="line"># *  *  *  *  * user-name  command to be executed</span><br><span class="line">0 0 * * * docker exec -it gitlab /bin/bash /home/git/gitlab-backup.sh</span><br><span class="line">10 0 * * * docker cp gitlab:/home/git/gitlab/tmp/backups /root/docker-gitlab-bak/</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>crond服务</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crontab -s /root/docker-gitlab-bak/gitlab.cron</span><br><span class="line">systemctl enable crond</span><br><span class="line">systemctl start crond</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="5-其他方式"><a href="#5-其他方式" class="headerlink" title="5. 其他方式"></a><strong>5. 其他方式</strong></h2><blockquote>
<p>主要指采用安装包安装的gitlab<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/opt/gitlab/bin/gitlab-rake gitlab:backup:create</span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=*******  #编号</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> GitLab </tag>
            
            <tag> Crond </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GitHub和Jekyll搭建静态博客]]></title>
      <url>http://my.fanzicai.com/Program/20160803-GitHub%E5%92%8CJekyll%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html</url>
      <content type="html"><![CDATA[<p>根据官方教程进行搭建，<a href="https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/" target="_blank" rel="noopener">https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/</a>。</p>
<a id="more"></a>
<h2 id="1-官方教程"><a href="#1-官方教程" class="headerlink" title="1. 官方教程"></a><strong>1. 官方教程</strong></h2><blockquote>
<p>根据官方教程<br>安装ruby、bundle<br>创建blog_jekyll目录<br>初始化jekyll工程</p>
</blockquote>
<hr>
<h2 id="2-Jekyll配置"><a href="#2-Jekyll配置" class="headerlink" title="2. Jekyll配置"></a><strong>2. Jekyll配置</strong></h2><blockquote>
<p>_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: fanzi.home@web</span><br><span class="line">email: fanzicai@yahoo.com</span><br><span class="line">description: &gt; # this means to ignore newlines until &quot;baseurl:&quot;</span><br><span class="line">  nothing to say.</span><br><span class="line">baseurl: &quot;/blog_jekyll&quot; # the subpath of your site, e.g. /blog</span><br><span class="line">url: &quot;https://www.fanzicai.com&quot; # the base hostname &amp; protocol for your site</span><br><span class="line">#twitter_username: jekyllrb</span><br><span class="line">github_username:  fanzicai</span><br><span class="line"># Build settings</span><br><span class="line">markdown: kramdown</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="3-GitHub配置"><a href="#3-GitHub配置" class="headerlink" title="3. GitHub配置"></a><strong>3. GitHub配置</strong></h2><blockquote>
<p>repo<br>blog_jekyll<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --set-upstream origin gh-pages</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>注意，git推送时，需把.gitconfig中的_site删除</p>
</blockquote>
<blockquote>
<p>访问<a href="https://fanzicai.github.io/blog_jekyll" target="_blank" rel="noopener">https://fanzicai.github.io/blog_jekyll</a></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 2016 </tag>
            
            <tag> Jekyll </tag>
            
            <tag> Ruby </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS安装Erlang和RabbitMQ]]></title>
      <url>http://my.fanzicai.com/Program/20160802-CentOS%E5%AE%89%E8%A3%85Erlang%E5%92%8CRabbitMQ.html</url>
      <content type="html"><![CDATA[<p>本文描述esl-erlang、esl-erlang-compat、rabbitmq-server的安装。</p>
<a id="more"></a>
<p>AMQP, Advanced Message Queuing Protocol，高级消息队列协议。</p>
<h2 id="1-安装Erlang"><a href="#1-安装Erlang" class="headerlink" title="1. 安装Erlang"></a><strong>1. 安装Erlang</strong></h2><ul>
<li><p>安装epel-release</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>安装Erlang</p>
<blockquote>
<p>编辑/etc/yum.repos.d/erlang.repo，增加内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[erlang-solutions]</span><br><span class="line">name=Centos 7 - x86_64 - Erlang Solutions</span><br><span class="line">baseurl=https://packages.erlang-solutions.com/rpm/centos/7/x86_64</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://packages.erlang-solutions.com/rpm/erlang_solutions.asc</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install -y esl-erlang</span><br><span class="line">rpm -ivh http://www.rabbitmq.com/releases/erlang/esl-erlang-compat-18.1-1.noarch.rpm</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<h2 id="2-安装RabbitMQ"><a href="#2-安装RabbitMQ" class="headerlink" title="2.安装RabbitMQ"></a><strong>2.安装RabbitMQ</strong></h2><ul>
<li><p>安装socat</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y socat</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>安装rabbitmq</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.4/rabbitmq-server-3.6.4-1.noarch.rpm</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>启动</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable rabbitmq-server</span><br><span class="line">systemctl start rabbitmq-server</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="3-启用Web-Plugin"><a href="#3-启用Web-Plugin" class="headerlink" title="3.启用Web-Plugin"></a><strong>3.启用Web-Plugin</strong></h2><ul>
<li><p>RabbitMQ management</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br><span class="line">systemctl restart rabbitmq-server</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>防火墙端口</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-port=15672/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>本地用户</p>
<blockquote>
<p>用户名guest，密码guest<br>无法远程登录</p>
</blockquote>
</li>
<li><p>远程用户</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user fanzi 123</span><br><span class="line">rabbitmqctl set_permissions -p &quot;/&quot; fanzi &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br><span class="line">rabbitmqctl set_user_tags fanzi administrator</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Erlang </tag>
            
            <tag> RabbitMQ </tag>
            
            <tag> AMQP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[V5Max优化GPS设置]]></title>
      <url>http://my.fanzicai.com/Phone/20160729-V5Max%E4%BC%98%E5%8C%96GPS%E8%AE%BE%E7%BD%AE.html</url>
      <content type="html"><![CDATA[<p>ZTE V5Max默认配置下搜星贼慢，故优化配置，主要两个文件gps.conf和apns-conf.xml。</p>
<a id="more"></a>
<h2 id="1-前提"><a href="#1-前提" class="headerlink" title="1. 前提"></a><strong>1. 前提</strong></h2><p>文件均在system/etc目录下，须root权限才能操作，常用RE管理器</p>
<blockquote>
<p>root推荐360一键root工具</p>
</blockquote>
<hr>
<h2 id="2-gps-conf"><a href="#2-gps-conf" class="headerlink" title="2. gps.conf"></a><strong>2. gps.conf</strong></h2><blockquote>
<p>文件修改后为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">XTRA_SERVER_1=http://xtra2.gpsonextra.net/xtra.bin</span><br><span class="line">XTRA_SERVER_2=http://xtra1.gpsonextra.net/xtra.bin</span><br><span class="line">XTRA_SERVER_3=http://xtra3.gpsonextra.net/xtra.bin</span><br><span class="line"></span><br><span class="line">ERR_ESTIMATE=0</span><br><span class="line"></span><br><span class="line">NTP_SERVER=0.cn.pool.ntp.org</span><br><span class="line">NTP_SERVER=1.cn.pool.ntp.org</span><br><span class="line">NTP_SERVER=2.cn.pool.ntp.org</span><br><span class="line">NTP_SERVER=3.cn.pool.ntp.org</span><br><span class="line">NTP_SERVER=cn.pool.ntp.org</span><br><span class="line"></span><br><span class="line">DEBUG_LEVEL = 3</span><br><span class="line"></span><br><span class="line">INTERMEDIATE_POS=0</span><br><span class="line"></span><br><span class="line">SUPL_VER=0x20000</span><br><span class="line"></span><br><span class="line">SUPL_ES=1</span><br><span class="line"></span><br><span class="line">CAPABILITIES=0x31</span><br><span class="line"></span><br><span class="line">SUPL_HOST=suplcn.sirf.com</span><br><span class="line">SUPL_HOST=221.176.0.55</span><br><span class="line">SUPL_HOST=supl.nokia.com</span><br><span class="line">SUPL_PORT=7275</span><br><span class="line"># SUPL_HOST=supl.google.com</span><br><span class="line"># SUPL_PORT=7276</span><br><span class="line"></span><br><span class="line">LPP_PROFILE = 0</span><br><span class="line"></span><br><span class="line">NMEA_PROVIDER=0</span><br><span class="line">SGLTE_TARGET=0</span><br><span class="line"></span><br><span class="line">A_GLONASS_POS_PROTOCOL_SELECT = 0</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="3-apns-conf-xml"><a href="#3-apns-conf-xml" class="headerlink" title="3. apns-conf.xml"></a><strong>3. apns-conf.xml</strong></h2><blockquote>
<p>将type=”default”改为type=”default,supl”</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Phone </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> V5Max </tag>
            
            <tag> ZTE </tag>
            
            <tag> Phone </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS设置多IP的方法]]></title>
      <url>http://my.fanzicai.com/Program/20160729-CentOS%E8%AE%BE%E7%BD%AE%E5%A4%9AIP%E7%9A%84%E6%96%B9%E6%B3%95.html</url>
      <content type="html"><![CDATA[<p>本文描述在CentOS7中单网卡配置多IP的情况，包括非连续IP和连续IP段。</p>
<a id="more"></a>
<blockquote>
<p>以网卡eno1为例<br>原配置文件为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-eno1</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="1-非连续IP"><a href="#1-非连续IP" class="headerlink" title="1. 非连续IP"></a><strong>1. 非连续IP</strong></h2><blockquote>
<p>新增配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-eno1:0</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-eno1:1</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-eno1:3</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>配置文件内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#/etc/sysconfig/network-scripts/ifcfg-eno1:0</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">DEVICE=eno1:0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.1.10</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.1.1</span><br><span class="line">DNS1=192.168.1.1</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<h2 id="2-连续IP段"><a href="#2-连续IP段" class="headerlink" title="2. 连续IP段"></a><strong>2. 连续IP段</strong></h2><blockquote>
<p>新增配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-eno1-range0</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>配置文件内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=static</span><br><span class="line">DEVICE=eno1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR_START=192.168.1.20</span><br><span class="line">IPADDR_END=192.168.1.39</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.1.1</span><br><span class="line">DNS1=192.168.1.1</span><br><span class="line">CLONENUM_START=3    #为起始编号，前面已用0、1、2，故此处为3</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse中配置Git和SSH]]></title>
      <url>http://my.fanzicai.com/Program/20160726-Eclipse%E4%B8%AD%E9%85%8D%E7%BD%AEGit%E5%92%8CSSH.html</url>
      <content type="html"><![CDATA[<p>Eclipse中使用Git进行Team协同。</p>
<a id="more"></a>
<h2 id="1-Git-Plug-in"><a href="#1-Git-Plug-in" class="headerlink" title="1. Git Plug-in"></a><strong>1. Git Plug-in</strong></h2><blockquote>
<p>默认情况下，Eclipse已经安装了Git插件，一般为EGit或JGit。<br>直接使用即可。</p>
</blockquote>
<hr>
<h2 id="2-Git配置"><a href="#2-Git配置" class="headerlink" title="2. Git配置"></a><strong>2. Git配置</strong></h2><blockquote>
<p>系统环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HOME = /.gitconfig目录</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>Eclipse配置<br>Team - Git - Configuration<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">key     - user.name</span><br><span class="line">value  - fanzi</span><br><span class="line">key     - user.email</span><br><span class="line">value  - fanzicai@yahoo.com</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>Eclipse配置<br>General - Network Connections - SSH2</p>
<pre><code>SSH2 home  = /git目录/.ssh    # 一般为gitlab或github等的私钥存放地
Key Management    #如有现成私钥，则导入，如无则创建，同时把公钥上传到git服务器
</code></pre><p>使用时，采用ssh访问 <a href="mailto:git@gitlab.com" target="_blank" rel="noopener">git@gitlab.com</a>/***.git方式</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> Git </tag>
            
            <tag> Eclipse </tag>
            
            <tag> SSH </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bind-chroot部署DNS服务器]]></title>
      <url>http://my.fanzicai.com/Program/20160720-Bind-chroot%E9%83%A8%E7%BD%B2DNS%E6%9C%8D%E5%8A%A1%E5%99%A8.html</url>
      <content type="html"><![CDATA[<p>CentOS 7部署DNS内网服务器，采用bind-chroot工具。</p>
<a id="more"></a>
<h2 id="1-安装工具"><a href="#1-安装工具" class="headerlink" title="1. 安装工具"></a><strong>1. 安装工具</strong></h2><ul>
<li>bind-utils</li>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install bind-utils</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2. 修改配置"></a><strong>2. 修改配置</strong></h2><blockquote>
<p>涉及目录有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/var/named/chroot/etc/</span><br><span class="line">    named.conf</span><br><span class="line">    named.rfc1912.zones</span><br><span class="line">/var/named/chroot/var/named/</span><br><span class="line">    nid.com.zone</span><br><span class="line">    1.168.192.local</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>named.conf<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -f /etc/named.conf /var/named/chroot/etc/</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.1.183; &#125;;</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line"></span><br><span class="line">        recursion yes;</span><br><span class="line"></span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        dnssec-validation no;</span><br><span class="line"></span><br><span class="line">        ...</span><br></pre></td></tr></table></figure>
</blockquote>
<ul>
<li><p>named.rfc1912.zones</p>
<blockquote>
<p>添加内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zone &quot;nid.com&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;nid.com.zone&quot;;</span><br><span class="line">        allow-update &#123;none;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;1.168.192.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;1.168.192.local&quot;;</span><br><span class="line">        allow-update &#123;none;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>nid.com.zone</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$TTL 86400</span><br><span class="line">@       IN SOA  nid.com. mail.nid.com. (</span><br><span class="line">                                        46      ; serial</span><br><span class="line">                                        43200   ; refresh</span><br><span class="line">                                        3600    ; retry</span><br><span class="line">                                        3600000 ; expire</span><br><span class="line">                                        2592000 )       ; minimum</span><br><span class="line">        IN      NS      www.nid.com.</span><br><span class="line">        IN      A       192.168.1.200</span><br><span class="line">www     IN      A       192.168.1.200</span><br><span class="line">gitlab  IN      A       192.168.1.10</span><br><span class="line">jenkins IN      A       192.168.1.80</span><br><span class="line">nginx   IN      A       192.168.1.200</span><br><span class="line">tomcat  IN      A       192.168.1.80</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.168.192.local</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$TTL 86400</span><br><span class="line">@       IN SOA  nid.com. mail.nid.com. (</span><br><span class="line">                                        45      ; serial</span><br><span class="line">                                        28800   ; refresh</span><br><span class="line">                                        14400   ; retry</span><br><span class="line">                                        36000000        ; expire</span><br><span class="line">                                        86400 ) ; minimum</span><br><span class="line">        IN      NS      www.nid.com.</span><br><span class="line">200     IN      PTR     www.nid.com.</span><br><span class="line">10      IN      PTR     gitlab.nid.com</span><br><span class="line">80      IN      PTR     jenkins.nid.com</span><br><span class="line"></span><br><span class="line">www     IN      A       192.168.1.200</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>/etc/resolv.conf</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 192.168.1.183</span><br><span class="line">nameserver 192.168.1.1</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>其中，192.168.1.183为DNS服务器的IP</p>
</blockquote>
<hr>
<h2 id="3-启动DNS"><a href="#3-启动DNS" class="headerlink" title="3. 启动DNS"></a><strong>3. 启动DNS</strong></h2><blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/libexec/setup-named-chroot.sh /var/named/chroot on</span><br><span class="line">systemctl enable named-chroot</span><br><span class="line">systemctl start named-chroot</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a><strong>4. 测试</strong></h2><blockquote>
<p>采用nslookup<br>server 查看DNS服务器列表<br><a href="http://www.nid.com" target="_blank" rel="noopener">www.nid.com</a> 查看该域名的ip</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Bind </tag>
            
            <tag> Chroot </tag>
            
            <tag> DNS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[个人域名绑定GitHub Pages]]></title>
      <url>http://my.fanzicai.com/Program/20160613-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9AGitHub-Pages.html</url>
      <content type="html"><![CDATA[<p><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>提供了最多1GB的免费空间，适用于静态页面，如博客等。<br><a href="https://www.fanzicai.com" target="_blank" rel="noopener">凡尘 博客</a>亦即采用该方式，并且使用了hexo发布博客。</p>
<a id="more"></a>
<h2 id="1-解析设置"><a href="#1-解析设置" class="headerlink" title="1. 解析设置"></a><strong>1. 解析设置</strong></h2><blockquote>
<p>在域名提供商处，对域名进行解析<br>比如<a href="www.fanzicai.com">www.fanzicai.com</a><br>解析地址可为下列地址之一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.30.252.153</span><br><span class="line">192.30.252.154</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="2-GitHub设置"><a href="#2-GitHub设置" class="headerlink" title="2. GitHub设置"></a><strong>2. GitHub设置</strong></h2><blockquote>
<p><a href="fanzicai.github.io">fanzicai.github.io</a>的repo中根目录增加文件CNAME<br>CNAME的内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.fanzicai.com</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>使用Hexo deploy时，会把服务端的CNAME冲掉</p>
</blockquote>
<hr>
<h2 id="3-Hexo"><a href="#3-Hexo" class="headerlink" title="3. Hexo"></a><strong>3. Hexo</strong></h2><blockquote>
<p>在source目录下，创建CNAME即可</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 2016 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows下更改GitBash默认路径]]></title>
      <url>http://my.fanzicai.com/Program/20160613-Windows%E4%B8%8B%E6%9B%B4%E6%94%B9GitBash%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84.html</url>
      <content type="html"><![CDATA[<p>运行Git Bash后，控制台会进入默认路径（目录）。Git安装后，默认路径为用户目录。</p>
<a id="more"></a>
<h2 id="Git-Bash默认路径"><a href="#Git-Bash默认路径" class="headerlink" title="Git Bash默认路径"></a><strong>Git Bash默认路径</strong></h2><ul>
<li><p>方法一</p>
<blockquote>
<p>Git Bash快捷方式的属性中，有一项配置“起始位置”，改为所需目录即可<br>通常情况下，该方法无效，故采用方法二</p>
</blockquote>
</li>
<li><p>方法二</p>
<blockquote>
<p>Git安装目录下，如“D:\Program Files\Git\etc”，找到profile文件，增加以下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HOME=&quot;所要设置的起始目录&quot;</span><br><span class="line">HOME=&quot;$(cd &quot;$HOME&quot; ; pwd)&quot;</span><br><span class="line">cd</span><br><span class="line">export PATH=&quot;$HOME/bin:$PATH&quot;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>本文使用的Git版本是2.8.2。 </p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 2016 </tag>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TortoiseGit连接Gitlab]]></title>
      <url>http://my.fanzicai.com/Program/20160608-TortoiseGit%E8%BF%9E%E6%8E%A5Gitlab.html</url>
      <content type="html"><![CDATA[<p>docker gitlab部署完成后，准备采用git bash和TortoiseGit连接gitlab。<br><a id="more"></a></p>
<h2 id="Git-Bash连接"><a href="#Git-Bash连接" class="headerlink" title="Git Bash连接"></a><strong>Git Bash连接</strong></h2><ul>
<li>密钥生成<blockquote>
<p>git bash</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;fanzicai@yahoo.com&quot; path_to_key_~/.ssh</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>自动生成id_rsa和id_rsa.pub</p>
</blockquote>
<ul>
<li>密钥上传<blockquote>
<p>将id_rsa.pub的数据添加到gitlab的ssh key</p>
</blockquote>
</li>
</ul>
<h2 id="TortoiseGit连接"><a href="#TortoiseGit连接" class="headerlink" title="TortoiseGit连接"></a><strong>TortoiseGit连接</strong></h2><ul>
<li><p>格式转换</p>
<blockquote>
<p>采用TortoiseGit的工具PuTTYgen<br>1、先”Load”上文的id_rsa<br>2、再”Save private key”存成ppk格式</p>
</blockquote>
</li>
<li><p>PuTTY设置</p>
<blockquote>
<p>设置gitlab服务器的连接，并存储<br>在Connection-&gt;SSH-&gt;Auth中添加上文ppk文件</p>
</blockquote>
</li>
<li><p>Pageant设置</p>
<blockquote>
<p>启动Pageant，添加ppk文件的key</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> GitLab </tag>
            
            <tag> Git </tag>
            
            <tag> TortoiseGit </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git clone指定非22端口号]]></title>
      <url>http://my.fanzicai.com/Program/20160608-git-clone%E6%8C%87%E5%AE%9A%E9%9D%9E22%E7%AB%AF%E5%8F%A3%E5%8F%B7.html</url>
      <content type="html"><![CDATA[<p>git clone项目时，采用ssh协议时，一般远端均是22端口。部署docker时，考虑端口映射成其他，如2222。<br><a id="more"></a></p>
<ul>
<li><p>22端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@hostname:repos/test.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>非22端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://git@hostname:2222/repos/test.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改默认端口</p>
<blockquote>
<p>编辑~/.ssh/config</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host ***</span><br><span class="line">    Hostname ***</span><br><span class="line">    User ***</span><br><span class="line">    Port 2222</span><br><span class="line">    IdentifyFile ~/.ssh/***</span><br></pre></td></tr></table></figure></blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7下设置时区方式]]></title>
      <url>http://my.fanzicai.com/Program/20160608-CentOS7%E4%B8%8B%E8%AE%BE%E7%BD%AE%E6%97%B6%E5%8C%BA%E6%96%B9%E5%BC%8F.html</url>
      <content type="html"><![CDATA[<p>时间的设置，通常采用date命令，很容易就能达到目的。最近在使用docker centos时，默认时区一般是美国，想要改变成北京时间。<br><a id="more"></a></p>
<ul>
<li><p>查看时区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -R</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改时区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Dockerfile之fanzi/gitlab-cn]]></title>
      <url>http://my.fanzicai.com/Program/20160602-Dockerfile%E4%B9%8Bfanzi-gitlab-cn.html</url>
      <content type="html"><![CDATA[<p>Dockerfile是创建docker image的一种常用方式。本文采用dockerfile创建<a href="https://hub.docker.com/r/fanzi/gitlab-cn/" target="_blank" rel="noopener">gitlab-cn image</a>。该image基于Centos Image 7创建，并与mysql image联合使用。<br><a id="more"></a></p>
<h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a><strong>1. 准备工作</strong></h2><p>可参考<a href="http://fanzicai.github.io/Program/2016/05/25/CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85Docker%E5%8F%8AGitLab.html" target="_blank" rel="noopener">CentOS7上安装Docker及GitLab</a>一文，先行安装CentOS、Docker。</p>
<ul>
<li>Docker MySQL<br>Oracle官方已提供MySQL的<a href="https://hub.docker.com/r/mysql/mysql-server/" target="_blank" rel="noopener">Docker Image</a>。<blockquote>
<p>docker -v 权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcon -Rt svirt_sandbox_file_t /root/docker-mysql-data</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>创建<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart always --name mysql -e MYSQL_ROOT_PASSWORD=123 -v /root/docker-mysql-data:/var/lib/mysql -p 3306:3306 -p 33060:33060 -d mysql/mysql-server:5.7 --character-set-server=utf8 --collation-server=utf8_general_ci</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>进入mysql控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql /bin/bash</span><br><span class="line">mysql -uroot -p123</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>创建git用户及database，本文git用户密码设置为git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &apos;git&apos;@&apos;%&apos; IDENTIFIED BY &apos;git&apos;;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;</span><br><span class="line">GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, CREATE TEMPORARY TABLES, DROP, INDEX, ALTER, LOCK TABLES ON `gitlabhq_production`.* TO &apos;git&apos;@&apos;%&apos;;</span><br><span class="line">flush privileges;</span><br><span class="line">\q</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="2-gitlab-cn-Dockerfile"><a href="#2-gitlab-cn-Dockerfile" class="headerlink" title="2. gitlab-cn Dockerfile"></a><strong>2. gitlab-cn Dockerfile</strong></h2><p>以下为Dockfile的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">FROM centos:centos7</span><br><span class="line">MAINTAINER fanzi &quot;fanzicai@yahoo.com&quot;</span><br><span class="line"></span><br><span class="line">RUN yum -y install wget \</span><br><span class="line"> &amp;&amp; wget http://repo.mysql.com//mysql57-community-release-el7-8.noarch.rpm \</span><br><span class="line"> &amp;&amp; rpm -Uvh mysql57-community-release-el7-8.noarch.rpm \</span><br><span class="line"> &amp;&amp; yum -y update \</span><br><span class="line"> &amp;&amp; yum -y group install &quot;development tools&quot; \</span><br><span class="line"> &amp;&amp; yum -y install epel-release \</span><br><span class="line"> &amp;&amp; yum -y install sudo vim cmake mysql mysql-devel openssh-server go ruby redis nodejs nginx readline-devel gdbm-devel openssl-devel expat-devel sqlite-devel libyaml-devel libffi-devel libxml2-devel libxslt-devel libicu-devel python-devel xmlto logwatch perl-ExtUtils-CBuilder</span><br><span class="line"></span><br><span class="line">RUN adduser --system --shell /bin/bash --comment &apos;GitLab&apos; --create-home --home-dir /home/git/ git \</span><br><span class="line"> &amp;&amp; chmod -R go+rx /home/git</span><br><span class="line"></span><br><span class="line">WORKDIR /home/git</span><br><span class="line">RUN wget https://www.kernel.org/pub/software/scm/git/git-2.8.3.tar.gz \</span><br><span class="line"> &amp;&amp; wget https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz \</span><br><span class="line"> &amp;&amp; wget https://storage.googleapis.com/golang/go1.5.3.linux-amd64.tar.gz \</span><br><span class="line"> &amp;&amp; wget  https://gitlab.com/larryli/gitlab/repository/archive.tar.gz?ref=v8.8.0.zh1 \</span><br><span class="line"> &amp;&amp; tar xvf git-2.8.3.tar.gz \</span><br><span class="line"> &amp;&amp; tar xvf ruby-2.3.1.tar.gz \</span><br><span class="line"> &amp;&amp; tar xvf go1.5.3.linux-amd64.tar.gz -C /usr/local/ \</span><br><span class="line"> &amp;&amp; tar xvf archive.tar.gz?ref=v8.8.0.zh1 \</span><br><span class="line"> &amp;&amp; mv gitlab-v8.8.0.zh1* gitlab \</span><br><span class="line"> &amp;&amp; ln -sf /usr/local/go/bin/&#123;go,godoc,gofmt&#125; /usr/bin/ \</span><br><span class="line"># Git install</span><br><span class="line"> &amp;&amp; cd git-2.8.3 \</span><br><span class="line"> &amp;&amp; ./configure --prefix=/usr \</span><br><span class="line"> &amp;&amp; make \</span><br><span class="line"> &amp;&amp; make install \</span><br><span class="line"> sudo -u git -H &quot;/usr/bin/git&quot; config --global core.autocrlf &quot;input&quot; \</span><br><span class="line"># Ruby update</span><br><span class="line"> &amp;&amp; cd ../ruby-2.3.1/ \</span><br><span class="line"> &amp;&amp; ./configure --prefix=/usr --disable-install-rdoc \</span><br><span class="line"> &amp;&amp; make \</span><br><span class="line"> &amp;&amp; make install \</span><br><span class="line"># Bundler</span><br><span class="line"> &amp;&amp; gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/ \</span><br><span class="line"> &amp;&amp; gem install bundler \</span><br><span class="line"> &amp;&amp; bundle config mirror.https://rubygems.org https://ruby.taobao.org \</span><br><span class="line"># Redis config &amp; start</span><br><span class="line"> &amp;&amp; echo &apos;unixsocket /var/run/redis/redis.sock&apos; &gt;&gt; /etc/redis.conf \</span><br><span class="line"> &amp;&amp; echo &apos;unixsocketperm 770&apos; &gt;&gt; /etc/redis.conf \</span><br><span class="line"> &amp;&amp; chown redis:redis /var/run/redis \</span><br><span class="line"> &amp;&amp; chmod 755 /var/run/redis \</span><br><span class="line"> &amp;&amp; usermod -aG redis git \</span><br><span class="line"> &amp;&amp; (redis-server /etc/redis.conf &amp;)</span><br><span class="line"></span><br><span class="line"># GitLab</span><br><span class="line">WORKDIR /home/git/gitlab/</span><br><span class="line">RUN cp config/gitlab.yml.example config/gitlab.yml \</span><br><span class="line"> &amp;&amp; cp config/secrets.yml.example config/secrets.yml \</span><br><span class="line"> &amp;&amp; chmod 0600 config/secrets.yml \</span><br><span class="line"> &amp;&amp; chown -R git log/ \</span><br><span class="line"> &amp;&amp; chown -R git tmp/ \</span><br><span class="line"> &amp;&amp; chmod -R u+rwX,go-w log/ \</span><br><span class="line"> &amp;&amp; chmod -R u+rwX tmp/ \</span><br><span class="line"> &amp;&amp; chmod -R u+rwX tmp/pids/ \</span><br><span class="line"> &amp;&amp; chmod -R u+rwX tmp/sockets/ \</span><br><span class="line"> &amp;&amp; mkdir public/uploads/ \</span><br><span class="line"> &amp;&amp; chmod 0700 public/uploads \</span><br><span class="line"> &amp;&amp; chmod -R u+rwX builds/ \</span><br><span class="line">  &amp;&amp; chmod -R u+rwX shared/artifacts/ \</span><br><span class="line"> &amp;&amp; cp config/unicorn.rb.example config/unicorn.rb \</span><br><span class="line"> &amp;&amp; cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb \</span><br><span class="line"> &amp;&amp; git config --global core.autocrlf input \</span><br><span class="line"> &amp;&amp; git config --global gc.auto 0 \</span><br><span class="line"> &amp;&amp; cp config/resque.yml.example config/resque.yml \</span><br><span class="line"> &amp;&amp; cp config/database.yml.mysql config/database.yml \</span><br><span class="line"> &amp;&amp; sed -i &apos;s/&quot;secure password&quot;/git/&apos; config/database.yml \</span><br><span class="line"> &amp;&amp; sed -i &apos;s/# host: localhost/host: mysql/&apos; config/database.yml \</span><br><span class="line"> &amp;&amp; sed -i &apos;s/rubygems.org/ruby.taobao.org/&apos; Gemfile \</span><br><span class="line"> &amp;&amp; bundle install --deployment --without development test postgres aws \</span><br><span class="line"> &amp;&amp; bundle exec rake gitlab:shell:install REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production \</span><br><span class="line"> &amp;&amp; chown -R git:git /home/git/repositories/ \</span><br><span class="line"> &amp;&amp; chmod -R ug+rwX,o-rwx /home/git/repositories/ \</span><br><span class="line"> &amp;&amp; chmod -R ug-s /home/git/repositories/ \</span><br><span class="line"> &amp;&amp; find /home/git/repositories/ -type d -print0 | xargs -0 chmod g+s \</span><br><span class="line"> &amp;&amp; chmod 700 /home/git/gitlab/public/uploads \</span><br><span class="line"> &amp;&amp; chown -R git:git config/ log/ \</span><br><span class="line"># GitLab rc.file</span><br><span class="line"> &amp;&amp; cp lib/support/init.d/gitlab /etc/init.d/gitlab</span><br><span class="line"></span><br><span class="line"># Nginx config</span><br><span class="line">WORKDIR /home/git/gitlab/</span><br><span class="line">RUN mkdir /etc/nginx/sites-available \</span><br><span class="line"> &amp;&amp; mkdir /etc/nginx/sites-enabled \</span><br><span class="line"> &amp;&amp; cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab \</span><br><span class="line"> &amp;&amp; ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab \</span><br><span class="line"> &amp;&amp; sed -i &apos;20a\  server 127.0.0.1:8080;&apos; /etc/nginx/sites-available/gitlab \</span><br><span class="line"> &amp;&amp; sed -i &apos;35,54d&apos; /etc/nginx/nginx.conf \</span><br><span class="line"> &amp;&amp; sed -i &apos;33a\    include /etc/nginx/sites-enabled/*;&apos; /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line">WORKDIR /home/git</span><br><span class="line"># Gitlab-Workhorse</span><br><span class="line">RUN git clone https://gitlab.com/gitlab-org/gitlab-workhorse.git \</span><br><span class="line"> &amp;&amp; cd gitlab-workhorse/ \</span><br><span class="line"> &amp;&amp; git checkout v0.7.2 \</span><br><span class="line"> &amp;&amp; make \</span><br><span class="line"> &amp;&amp; sshd-keygen</span><br><span class="line"></span><br><span class="line">EXPOSE 80 22</span><br><span class="line"></span><br><span class="line">VOLUME [&quot;/tmp/gitlab-cn&quot;]</span><br><span class="line"></span><br><span class="line">ADD ./gitlab-init.sh /home/git/gitlab-init.sh</span><br><span class="line">ADD ./gitlab-run.sh /home/git/gitlab-run.sh</span><br><span class="line"></span><br><span class="line">RUN chmod +x /home/git/gitlab-init.sh</span><br><span class="line">RUN chmod +x /home/git/gitlab-run.sh</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;/home/git/gitlab-run.sh&quot;]</span><br></pre></td></tr></table></figure></p>
<p>其中，gitlab-init.sh脚本内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cd /home/git/gitlab</span><br><span class="line">bundle exec rake gitlab:setup RAILS_ENV=production force=yes</span><br><span class="line">bundle exec rake assets:precompile RAILS_ENV=production</span><br><span class="line">chown -R git:git /home/git/</span><br><span class="line">sudo -u git -H &quot;/usr/bin/git&quot; config --global core.autocrlf &quot;input&quot;</span><br></pre></td></tr></table></figure></p>
<p>gitlab-run.sh脚本内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#gitlab start</span><br><span class="line">/etc/init.d/gitlab start &amp;</span><br><span class="line"></span><br><span class="line">#nginx start</span><br><span class="line">nginx &amp;</span><br><span class="line"></span><br><span class="line">#sshd start</span><br><span class="line">/usr/sbin/sshd</span><br><span class="line"></span><br><span class="line">#redis start</span><br><span class="line">sudo -u redis -H redis-server /etc/redis.conf</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="3-Image-Build"><a href="#3-Image-Build" class="headerlink" title="3. Image Build"></a><strong>3. Image Build</strong></h2><p>本Image已上传<a href="https://hub.docker.com/r/fanzi/gitlab-cn/" target="_blank" rel="noopener">https://hub.docker.com/r/fanzi/gitlab-cn/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --rm=true -t fanzi/gitlab-cn .</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="4-Image-USE"><a href="#4-Image-USE" class="headerlink" title="4. Image USE"></a><strong>4. Image USE</strong></h2><ul>
<li><p>docker -v 权限</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcon -Rt svirt_sandbox_file_t /root/docker-gitlab-bak/backups</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>创建容器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --detach --restart always  -v /root/docker-gitlab-bak/backups:/home/git/gitlab/tmp/backups --link mysql:mysql -p 80:80 -p 22:22 --name gitlab fanzi/gitlab-cn</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化数据库</p>
<blockquote>
<p>确保mysql容器运行，只在创建容器后运行一次</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it gitlab /bin/bash -c /home/git/gitlab-init.sh</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>修改域名</p>
<blockquote>
<p>/home/git/gitlab/config/gitlab.yml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: 192.168.1.*</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> GitLab </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker GitLab中文版安装]]></title>
      <url>http://my.fanzicai.com/Program/20160530-Docker-GitLab%E4%B8%AD%E6%96%87%E7%89%88%E5%AE%89%E8%A3%85.html</url>
      <content type="html"><![CDATA[<p><a href="https://about.gitlab.com/" target="_blank" rel="noopener">GitLab</a>是基于<a href="http://www.ruby-lang.org/en/" target="_blank" rel="noopener">Ruby on Rails</a>的一个开源的版本管理系统，其内嵌了Redis。本文在<a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>上采用<a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>安装<a href="https://gitlab.com/larryli/gitlab/tags" target="_blank" rel="noopener">GitLab汉化版</a>.<br><a id="more"></a></p>
<h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a><strong>1. 准备工作</strong></h2><p>可参考<a href="http://fanzicai.github.io/Program/2016/05/25/CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85Docker%E5%8F%8AGitLab.html" target="_blank" rel="noopener">CentOS7上安装Docker及GitLab</a>一文，先行安装CentOS、Docker。</p>
<ul>
<li>Docker MySQL<br>Oracle官方已提供MySQL的<a href="https://hub.docker.com/r/mysql/mysql-server/" target="_blank" rel="noopener">Docker Image</a>。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --detach -p 192.168.1.80:3306:3306 -p 192.168.1.80:33060:33060 --restart always  -e MYSQL_ROOT_PASSWORD=123 -v /root/mysql:/var/lib/mysql --name mysql mysql/mysql-server --character-set-server=utf8 --collation-server=utf8_general_ci</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>docker -v 权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcon -Rt svirt_sandbox_file_t /root/mysql</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>进入mysql控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql /bin/bash</span><br><span class="line">mysql -uroot -p123</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>创建git用户及database<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &apos;git&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;$password&apos;;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;</span><br><span class="line">GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, CREATE TEMPORARY TABLES, DROP, INDEX, ALTER, LOCK TABLES ON `gitlabhq_production`.* TO &apos;git&apos;@&apos;%&apos;;</span><br><span class="line">flush privileges;</span><br><span class="line">\q</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>Docker <a href="https://wiki.centos.org/zh/Cloud/Docker?highlight=%28docker%29" target="_blank" rel="noopener">CentOS</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach -ti \</span><br><span class="line">    --publish 80:80 --publish 8080:8080 \</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    --link mysql:mysql \</span><br><span class="line">    centos:latest</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>其中–link参数用于表明连接之前mysql容器</p>
<ul>
<li>进入gitlab-cn shell<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it gitlab /bin/bash</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<hr>
<h2 id="2-基本工具"><a href="#2-基本工具" class="headerlink" title="2. 基本工具"></a><strong>2. 基本工具</strong></h2><p>正式安GitLab及其依赖库之前，系统必须具备一些条件，需执行以下命令安装一些必要的基本工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br><span class="line">yum -y group install &quot;development tools&quot;</span><br><span class="line">yum -y install vim cmake wget</span><br><span class="line">yum -y install readline-devel gdbm-devel openssl-devel expat-devel sqlite-devel libyaml-devel libffi-devel libxml2-devel libxslt-devel libicu-devel system-config-firewall-tui python-devel xmlto logwatch perl-ExtUtils-CBuilder</span><br><span class="line">yum -y install sudo</span><br></pre></td></tr></table></figure>
<blockquote>
<p>以下如非特殊说明，均采用root登录安装</p>
</blockquote>
<hr>
<h2 id="3-Git用户"><a href="#3-Git用户" class="headerlink" title="3. Git用户"></a><strong>3. Git用户</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser --system --shell /bin/bash --comment &apos;GitLab&apos; --create-home --home-dir /home/git/ git</span><br><span class="line">chmod -R go+rx /home/git</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="4-Git"><a href="#4-Git" class="headerlink" title="4. Git"></a><strong>4. Git</strong></h2><p>因CentOS仓库的Git版本较低，本文采用源码安装的方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.8.3.tar.gz</span><br><span class="line">tar xvf git-2.8.3.tar.gz</span><br><span class="line">cd git-2.8.3</span><br><span class="line">./configure --prefix=/usr</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="5-Ruby"><a href="#5-Ruby" class="headerlink" title="5. Ruby"></a><strong>5. Ruby</strong></h2><ul>
<li><p>Ruby</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">yum -y install ruby</span><br><span class="line">wget https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz</span><br><span class="line">tar xvf ruby-2.3.1.tar.gz</span><br><span class="line">cd ruby-2.3.1</span><br><span class="line">./configure --prefix=/usr --disable-install-rdoc</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>Bundler</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span><br><span class="line">gem install bundler</span><br><span class="line">bundle config mirror.https://rubygems.org https://ruby.taobao.org</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://ruby.taobao.org" target="_blank" rel="noopener">https://ruby.taobao.org</a>是个完整的镜像。</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="6-Go"><a href="#6-Go" class="headerlink" title="6. Go"></a><strong>6. Go</strong></h2><p>Go源码安装，但需要系统本身已有旧版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install go</span><br><span class="line">cd /root</span><br><span class="line">wget https://storage.googleapis.com/golang/go1.5.3.linux-amd64.tar.gz</span><br><span class="line">tar xvf go1.5.3.linux-amd64.tar.gz -C /usr/local/ </span><br><span class="line">ln -sf /usr/local/go/bin/&#123;go,godoc,gofmt&#125; /usr/bin/</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="7-MySQL"><a href="#7-MySQL" class="headerlink" title="7. MySQL"></a><strong>7. MySQL</strong></h2><ul>
<li><p>MySQL安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com//mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line">rpm -Uvh mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line">yum -y update</span><br><span class="line">yum -y install mysql mysql-devel</span><br></pre></td></tr></table></figure>
</li>
<li><p>MySQL连接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h mysql -ugit -p$password -D gitlabhq_production</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>其中$password为之前创建git用户时的密码</p>
</blockquote>
<hr>
<h2 id="8-Redis"><a href="#8-Redis" class="headerlink" title="8. Redis"></a><strong>8. Redis</strong></h2><p>CentOS仓库默认没有Redis，先安装EPEL源。</p>
<ul>
<li><p>Redis安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install redis</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑/etc/redis.conf</p>
<blockquote>
<p>unixsocket设置为 /var/run/redis/redis.sock<br>unixsocketperm 设置为 770</p>
</blockquote>
</li>
<li><p>设置及启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chown redis:redis /var/run/redis</span><br><span class="line">chmod 755 /var/run/redis</span><br><span class="line">usermod -aG redis git</span><br><span class="line">systemctl enable redis</span><br><span class="line">redis-server /etc/redis.conf &amp;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="9-Node-js"><a href="#9-Node-js" class="headerlink" title="9. Node.js"></a><strong>9. Node.js</strong></h2><p>Node.js也需要EPEL源。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nodejs</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="10-GitLab"><a href="#10-GitLab" class="headerlink" title="10. GitLab"></a><strong>10. GitLab</strong></h2><p>本文是为了安装汉化版的GitLab才采用的源码安装方式。如若英文版，建议采用RPM方式安装，可参见另文或官网。</p>
<ul>
<li><p>GitLab下载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">sudo -u git -H wget  https://gitlab.com/larryli/gitlab/repository/archive.tar.gz?ref=v8.8.0.zh1</span><br><span class="line">sudo -u git -H tar xvf archive.tar.gz?ref=v8.8.0.zh1</span><br><span class="line">sudo -u git -H ln -s gitlab* gitlab</span><br></pre></td></tr></table></figure>
</li>
<li><p>gitlab.yml文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab</span><br><span class="line">sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>编辑gitlab.yml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H vim config/gitlab.yml</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>修改host，本文修改为本机IP</p>
</blockquote>
<ul>
<li><p>配置及权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/secrets.yml.example config/secrets.yml</span><br><span class="line">sudo -u git -H chmod 0600 config/secrets.yml</span><br><span class="line">sudo chown -R git log/</span><br><span class="line">sudo chown -R git tmp/</span><br><span class="line">sudo chmod -R u+rwX,go-w log/</span><br><span class="line">sudo chmod -R u+rwX tmp/</span><br><span class="line">sudo chmod -R u+rwX tmp/pids/</span><br><span class="line">sudo chmod -R u+rwX tmp/sockets/</span><br><span class="line">sudo -u git -H mkdir public/uploads/</span><br><span class="line">sudo chmod 0700 public/uploads</span><br><span class="line">sudo chmod -R u+rwX builds/</span><br><span class="line">sudo chmod -R u+rwX shared/artifacts/</span><br></pre></td></tr></table></figure>
</li>
<li><p>unicorn.rb文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>必要时编辑unicorn.rb文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H vim config/unicorn.rb</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>其他配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb</span><br><span class="line">sudo -u git -H git config --global core.autocrlf input</span><br><span class="line">sudo -u git -H git config --global gc.auto 0</span><br></pre></td></tr></table></figure>
</li>
<li><p>resque.yml文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/resque.yml.example config/resque.yml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>编辑resque.yml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H vim config/resque.yml</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>本文无修改</p>
</blockquote>
<ul>
<li>database.yml文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/database.yml.mysql config/database.yml</span><br><span class="line">sudo -u git -H chmod o-rwx config/database.yml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>编辑database.yml文件<br>修改用户为git，host为mysql</p>
</blockquote>
<ul>
<li>gitlab-shell<blockquote>
<p>编辑Gemfile<br>改为ruby.taobao.org</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle install --deployment --without development test postgres aws</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:shell:install REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="11-gitlab-workhorse"><a href="#11-gitlab-workhorse" class="headerlink" title="11. gitlab-workhorse"></a><strong>11. gitlab-workhorse</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-workhorse.git</span><br><span class="line">cd gitlab-workhorse</span><br><span class="line">sudo -u git -H git checkout v0.7.2</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="12-DB-Init"><a href="#12-DB-Init" class="headerlink" title="12. DB Init"></a><strong>12. DB Init</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production force=yes</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="13-gitlab-root"><a href="#13-gitlab-root" class="headerlink" title="13. gitlab root"></a><strong>13. gitlab root</strong></h2><p>更改gitlab root密码，默认无密码，也可初次访问时修改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD=yourpassword GITLAB_ROOT_EMAIL=youremail</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="14-gitlab服务"><a href="#14-gitlab服务" class="headerlink" title="14. gitlab服务"></a><strong>14. gitlab服务</strong></h2><ul>
<li><p>一些配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R git:git /home/git/repositories/</span><br><span class="line">sudo chmod -R ug+rwX,o-rwx /home/git/repositories/</span><br><span class="line">sudo chmod -R ug-s /home/git/repositories/</span><br><span class="line">sudo find /home/git/repositories/ -type d -print0 | sudo xargs -0 chmod g+s</span><br><span class="line">sudo chmod 700 /home/git/gitlab-v8.8.0.zh1-5c495e42d863613b5288d332c2c6f4189a684735/public/uploads</span><br></pre></td></tr></table></figure>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab</span><br><span class="line">chkconfig gitlab on</span><br><span class="line">/etc/init.d/gitlab start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="15-常用查询"><a href="#15-常用查询" class="headerlink" title="15. 常用查询"></a><strong>15. 常用查询</strong></h2><ul>
<li><p>确认应用状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译assets</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="16-Nginx"><a href="#16-Nginx" class="headerlink" title="16. Nginx"></a><strong>16. Nginx</strong></h2><ul>
<li><p>Nginx安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab/</span><br><span class="line">yum -y install nginx</span><br><span class="line">mkdir /etc/nginx/sites-available</span><br><span class="line">mkdir /etc/nginx/sites-enabled</span><br><span class="line">sudo cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab</span><br><span class="line">sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改gitlab配置</p>
<blockquote>
<p>增加server 127.0.0.1:8080</p>
</blockquote>
</li>
<li><p>修改nginx.conf</p>
<blockquote>
<p>增加include /etc/nginx/sites-enabled/*<br>去掉默认的80 server</p>
</blockquote>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="17-确认安装情况"><a href="#17-确认安装情况" class="headerlink" title="17. 确认安装情况"></a><strong>17. 确认安装情况</strong></h2><blockquote>
<p>编辑/home/git/gitlab-shell/config.yml<br>将url改为<a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab/</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production</span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> GitLab </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7上搭建Docker私有仓库]]></title>
      <url>http://my.fanzicai.com/Program/20160525-CentOS7%E4%B8%8A%E6%90%AD%E5%BB%BADocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。<br><a id="more"></a></p>
<h2 id="1-CentOS"><a href="#1-CentOS" class="headerlink" title="1. CentOS"></a><strong>1. CentOS</strong></h2><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>（Community Enterprise Operation System, 社区企业操作系统）,截至发文时，最新版为CentOS7，本文安装的是64位。</p>
<ul>
<li><p>安装环境：</p>
<blockquote>
<p>VMware® Workstation 12 Pro</p>
</blockquote>
</li>
<li><p>安装版本</p>
<blockquote>
<p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS-7-x86_64-Everything-1511</a> </p>
</blockquote>
</li>
<li><p>安装方式</p>
<blockquote>
<p>Minimal Install</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-Docker"><a href="#2-Docker" class="headerlink" title="2. Docker"></a><strong>2. <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a></strong></h2><p>参考<a href="https://docs.docker.com/engine/installation/linux/centos/" target="_blank" rel="noopener">官网安装流程</a>和<a href="https://wiki.centos.org/zh/Cloud/Docker?highlight=%28docker%29" target="_blank" rel="noopener">CentOS Wiki</a>。</p>
<ul>
<li><p>准备工作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y update</span><br></pre></td></tr></table></figure>
</li>
<li><p>CentOS Wiki推荐方式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry</span><br><span class="line">docker run -d -p 5000:5000 --restart=always -v /opt/data/registry:/tmp/registry --name registry docker.io/registry</span><br></pre></td></tr></table></figure>
</li>
<li><p>访问仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl *.*.*.*:5000/v1/search</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="3-上传镜像"><a href="#3-上传镜像" class="headerlink" title="3. 上传镜像"></a><strong>3. 上传镜像</strong></h2><p>在已安装docker gitlab的虚拟机上，向上文仓库提交镜像，采用gitlab image。</p>
<ul>
<li><p>列出镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建镜像链接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag docker.io/gitlab/gitlab-ce *.*.*.*:5000/gitlab-ce</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改客户端配置文件</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/docker</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>增加”–insecure-registry *.*.*.*:5000”</p>
</blockquote>
<ul>
<li>提交镜像<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push *.*.*.*:5000/gitlab-ce</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7上安装Docker及Jenkins]]></title>
      <url>http://my.fanzicai.com/Program/20160525-CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85Docker%E5%8F%8AJenkins.html</url>
      <content type="html"><![CDATA[<p><a href="https://jenkins.io/" target="_blank" rel="noopener">Jenkins</a>是基于Java开发的一种持续集成工具，用于监控持续重复的工作，功能包括：</p>
<ul>
<li>持续的软件版本发布/测试项目。</li>
<li>监控外部调用执行的工作。<a id="more"></a>
</li>
</ul>
<h2 id="1-CentOS"><a href="#1-CentOS" class="headerlink" title="1. CentOS"></a><strong>1. CentOS</strong></h2><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>（Community Enterprise Operation System, 社区企业操作系统）,截至发文时，最新版为CentOS7，本文安装的是64位。</p>
<ul>
<li><p>安装环境：</p>
<blockquote>
<p>VMware® Workstation 12 Pro</p>
</blockquote>
</li>
<li><p>安装版本</p>
<blockquote>
<p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS-7-x86_64-Everything-1511</a> </p>
</blockquote>
</li>
<li><p>安装方式</p>
<blockquote>
<p>Minimal Install</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-Docker"><a href="#2-Docker" class="headerlink" title="2. Docker"></a><strong>2. <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a></strong></h2><p>参考<a href="https://wiki.centos.org/zh/Cloud/Docker?highlight=%28docker%29" target="_blank" rel="noopener">CentOS Wiki</a>。</p>
<ul>
<li><p>准备工作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y update</span><br></pre></td></tr></table></figure>
</li>
<li><p>CentOS Wiki推荐方式</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="3-Jenkins"><a href="#3-Jenkins" class="headerlink" title="3. Jenkins"></a><strong>3. <a href="https://jenkins.io/" target="_blank" rel="noopener">Jenkins</a></strong></h2><p>采用<a href="https://hub.docker.com/_/jenkins/" target="_blank" rel="noopener">docker jenkins</a></p>
<ul>
<li>安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach --name jenkins --restart always -v /root/docker-jenkins-data:/var/jenkins_home -p 8080:8080 -p 50000:50000 jenkins</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>下载image及创建名为jenkis的容器并运行<br>启动、停止容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker start jenkins</span><br><span class="line">docker stop jenkins</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>访问<blockquote>
<p>建议采用IE内核的浏览器<br>在chrome浏览器下，配置任务时容易出错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://*.*.*.*:8080</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="3-Git插件"><a href="#3-Git插件" class="headerlink" title="3. Git插件"></a><strong>3. Git插件</strong></h2><blockquote>
<p>管理插件<br>因为采用gitlab管理源码，需要添加</p>
<ul>
<li>git plugin</li>
<li>git client plugin</li>
<li>gitlab hook plugin</li>
<li>gitlab plugin</li>
<li>gitlab merge request builder</li>
<li>gitlab logo plugin</li>
<li>Gitlab Authentication plugin</li>
</ul>
</blockquote>
<hr>
<h2 id="4-访问Gitlab"><a href="#4-访问Gitlab" class="headerlink" title="4. 访问Gitlab"></a><strong>4. 访问Gitlab</strong></h2><blockquote>
<p>采用git clone git@host_gitlab:usr_name/repo_name.git<br>需先在jenkins容器中生成私钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /var/jenkins_home</span><br><span class="line">ssh-keygen -t rsa -C &quot;fanzicai@yahoo.com&quot; -f /var/jenkins_home/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>把id_rsa.pub的公钥内容，配置到gitlab服务器上<br>同时，在jenkins构建工程设置中私钥采用<br>From the Jenkins master ~/.ssh</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> Docker </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7上安装Docker及GitLab]]></title>
      <url>http://my.fanzicai.com/Program/20160525-CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85Docker%E5%8F%8AGitLab.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a>是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。<br><a id="more"></a></p>
<h2 id="1-CentOS"><a href="#1-CentOS" class="headerlink" title="1. CentOS"></a><strong>1. CentOS</strong></h2><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>（Community Enterprise Operation System, 社区企业操作系统）,截至发文时，最新版为CentOS7，本文安装的是64位。</p>
<ul>
<li><p>安装环境：</p>
<blockquote>
<p>VMware® Workstation 12 Pro</p>
</blockquote>
</li>
<li><p>安装版本</p>
<blockquote>
<p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS-7-x86_64-Everything-1511</a></p>
</blockquote>
</li>
<li><p>安装方式</p>
<blockquote>
<p>Minimal Install</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-Docker"><a href="#2-Docker" class="headerlink" title="2. Docker"></a><strong>2. <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a></strong></h2><p>参考<a href="https://docs.docker.com/engine/installation/linux/centos/" target="_blank" rel="noopener">官网安装流程</a>和<a href="https://wiki.centos.org/zh/Cloud/Docker?highlight=%28docker%29" target="_blank" rel="noopener">CentOS Wiki</a>。</p>
<ul>
<li><p>准备工作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y update</span><br></pre></td></tr></table></figure>
</li>
<li><p>官网方式</p>
<blockquote>
<p>添加repo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo tee /etc/yum.repos.d/docker.repo &lt;&lt;-&apos;EOF&apos;</span><br><span class="line">[dockerrepo]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://yum.dockerproject.org/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>正式安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-engine</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>CentOS Wiki推荐方式</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="3-GitLab"><a href="#3-GitLab" class="headerlink" title="3. GitLab"></a><strong>3. GitLab</strong></h2><p>安装教程详见<a href="http://docs.gitlab.com/omnibus/docker/" target="_blank" rel="noopener">http://docs.gitlab.com/omnibus/docker/</a>。</p>
<ul>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --detach \</span><br><span class="line">    --hostname gitlab.example.com \</span><br><span class="line">    --env GITLAB_OMNIBUS_CONFIG=&quot;external_url &apos;http://my.domain.com/&apos;; gitlab_rails[&apos;lfs_enabled&apos;] = true;&quot;\</span><br><span class="line">    --publish 443:443 --publish 80:80 --publish 22:22\</span><br><span class="line">    --name gitlab \</span><br><span class="line">    --restart always \</span><br><span class="line">    gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入gitlab控制台</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec -it gitlab /bin/bash</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec -it gitlab vi /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker start gitlab</span><br></pre></td></tr></table></figure>
</li>
<li><p>其他命令</p>
<blockquote>
<p>停止</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker stop gitlab</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm gitlab</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>更新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>查看日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker logs gitlab</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>查看Container<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>查看Image<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> GitLab </tag>
            
            <tag> Docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7上安装GitLab（SRC）]]></title>
      <url>http://my.fanzicai.com/Program/20160520-CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85GitLab%EF%BC%88SRC%EF%BC%89.html</url>
      <content type="html"><![CDATA[<p><a href="https://about.gitlab.com/" target="_blank" rel="noopener">GitLab</a>是基于<a href="http://www.ruby-lang.org/en/" target="_blank" rel="noopener">Ruby on Rails</a>的一个开源的版本管理系统，其内嵌了Redis。本文在<a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>上采用<a href="http://docs.gitlab.com/ce/install/installation.html" target="_blank" rel="noopener">源码方式</a>安装<a href="https://gitlab.com/larryli/gitlab/tags" target="_blank" rel="noopener">GitLab汉化版</a>.<br><a id="more"></a></p>
<h2 id="1-CentOS"><a href="#1-CentOS" class="headerlink" title="1. CentOS"></a><strong>1. CentOS</strong></h2><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>（Community Enterprise Operation System, 社区企业操作系统）,截至发文时，最新版为CentOS7，本文安装的是64位。</p>
<ul>
<li><p>安装环境：</p>
<blockquote>
<p>VMware® Workstation 12 Pro</p>
</blockquote>
</li>
<li><p>安装版本</p>
<blockquote>
<p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS-7-x86_64-Everything-1511</a></p>
</blockquote>
</li>
<li><p>安装方式</p>
<blockquote>
<p>Minimal Install</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-基本工具"><a href="#2-基本工具" class="headerlink" title="2. 基本工具"></a><strong>2. 基本工具</strong></h2><p>正式安GitLab及其依赖库之前，系统必须具备一些条件，需执行以下命令安装一些必要的基本工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br><span class="line">yum -y group install &quot;development tools&quot;</span><br><span class="line">yum -y install vim cmake wget</span><br><span class="line">yum -y install readline-devel gdbm-devel openssl-devel expat-devel sqlite-devel libyaml-devel libffi-devel libxml2-devel libxslt-devel libicu-devel system-config-firewall-tui python-devel xmlto logwatch perl-ExtUtils-CBuilder</span><br></pre></td></tr></table></figure>
<blockquote>
<p>以下如非特殊说明，均采用root登录安装</p>
</blockquote>
<hr>
<h2 id="3-Git"><a href="#3-Git" class="headerlink" title="3. Git"></a><strong>3. Git</strong></h2><p>因CentOS仓库的Git版本较低，本文采用源码安装的方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.8.3.tar.gz</span><br><span class="line">tar xvf git-2.8.3.tar.gz</span><br><span class="line">cd git-2.8.3</span><br><span class="line">./configure --prefix=/usr</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="4-Ruby"><a href="#4-Ruby" class="headerlink" title="4. Ruby"></a><strong>4. Ruby</strong></h2><ul>
<li><p>Ruby</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">yum -y install ruby</span><br><span class="line">wget https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz</span><br><span class="line">tar xvf ruby-2.3.1.tar.gz</span><br><span class="line">cd ruby-2.3.1</span><br><span class="line">./configure --prefix=/usr --disable-install-rdoc</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>Bundler</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span><br><span class="line">gem install bundler</span><br><span class="line">bundle config mirror.https://rubygems.org https://ruby.taobao.org</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://ruby.taobao.org" target="_blank" rel="noopener">https://ruby.taobao.org</a>是个完整的镜像。</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="5-Go"><a href="#5-Go" class="headerlink" title="5. Go"></a><strong>5. Go</strong></h2><p>Go源码安装，需要系统本身已有旧版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install go</span><br><span class="line">cd /root</span><br><span class="line">wget https://storage.googleapis.com/golang/go1.5.3.linux-amd64.tar.gz</span><br><span class="line">tar xvf go1.5.3.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line">ln -sf /usr/local/go/bin/&#123;go,godoc,gofmt&#125; /usr/bin/</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="6-Git用户"><a href="#6-Git用户" class="headerlink" title="6. Git用户"></a><strong>6. Git用户</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser --system --shell /bin/bash --comment &apos;GitLab&apos; --create-home --home-dir /home/git/ git</span><br></pre></td></tr></table></figure>
<h2 id="7-PostgreSQL"><a href="#7-PostgreSQL" class="headerlink" title="7. PostgreSQL"></a><strong>7. PostgreSQL</strong></h2><ul>
<li><p>PostgreSQL安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install postgresql-server postgresql-contrib postgresql-devel</span><br><span class="line">postgresql-setup initdb</span><br><span class="line">systemctl enable postgresql</span><br><span class="line">systemctl start postgresql</span><br></pre></td></tr></table></figure>
</li>
<li><p>默认用户postgres的密码修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br><span class="line">psql -U postgres</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>执行SQL语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER postgres WITH PASSWORD &apos;postgres&apos;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>退出命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>GitLab库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -d template1 -c &quot;CREATE USER git CREATEDB;&quot;</span><br><span class="line">sudo -u postgres psql -d template1 -c &quot;CREATE DATABASE gitlabhq_production OWNER git;&quot;</span><br><span class="line">sudo -u postgres psql -d template1 -c &quot;CREATE EXTENSION IF NOT EXISTS pg_trgm;&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看创建情况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H psql -d gitlabhq_production</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>执行SQL语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT true AS enabled FROM pg_available_extensions WHERE name = &apos;pg_trgm&apos;;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enabled</span><br><span class="line">-------</span><br><span class="line">t</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="8-Redis"><a href="#8-Redis" class="headerlink" title="8. Redis"></a><strong>8. Redis</strong></h2><p>CentOS仓库默认没有Redis，先安装EPEL源。</p>
<ul>
<li><p>Redis安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install redis</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑/etc/redis.conf</p>
<blockquote>
<p>unixsocket设置为 /var/run/redis/redis.sock<br>unixsocketperm 设置为 770</p>
</blockquote>
</li>
<li><p>设置及启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chown redis:redis /var/run/redis</span><br><span class="line">chmod 755 /var/run/redis</span><br><span class="line">usermod -aG redis git</span><br><span class="line">systemctl enable redis</span><br><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="9-Node-js"><a href="#9-Node-js" class="headerlink" title="9. Node.js"></a><strong>9. Node.js</strong></h2><p>Node.js也需要EPEL源。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nodejs</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="10-GitLab"><a href="#10-GitLab" class="headerlink" title="10. GitLab"></a><strong>10. GitLab</strong></h2><p>本文是为了安装汉化版的GitLab才采用的源码安装方式。如若英文版，建议采用RPM方式安装，可参见另文或官网。</p>
<ul>
<li><p>GitLab下载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">sudo -u git -H wget  https://gitlab.com/larryli/gitlab/repository/archive.tar.gz?ref=v8.8.0.zh1</span><br><span class="line">sudo -u git -H tar xvf archive.tar.gz?ref=v8.8.0.zh1</span><br><span class="line">sudo -u git -H ln -s gitlab* gitlab</span><br></pre></td></tr></table></figure>
</li>
<li><p>gitlab.yml文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab</span><br><span class="line">sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>编辑gitlab.yml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H vim config/gitlab.yml</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>修改host，本文修改为本机IP</p>
</blockquote>
<ul>
<li><p>配置及权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/secrets.yml.example config/secrets.yml</span><br><span class="line">sudo -u git -H chmod 0600 config/secrets.yml</span><br><span class="line">sudo chown -R git log/</span><br><span class="line">sudo chown -R git tmp/</span><br><span class="line">sudo chmod -R u+rwX,go-w log/</span><br><span class="line">sudo chmod -R u+rwX tmp/</span><br><span class="line">sudo chmod -R u+rwX tmp/pids/</span><br><span class="line">sudo chmod -R u+rwX tmp/sockets/</span><br><span class="line">sudo -u git -H mkdir public/uploads/</span><br><span class="line">sudo chmod 0700 public/uploads</span><br><span class="line">sudo chmod -R u+rwX builds/</span><br><span class="line">sudo chmod -R u+rwX shared/artifacts/</span><br></pre></td></tr></table></figure>
</li>
<li><p>unicorn.rb文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>必要时编辑unicorn.rb文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H vim config/unicorn.rb</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>本文将8080改为9000</p>
</blockquote>
<ul>
<li><p>其他配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb</span><br><span class="line">sudo -u git -H git config --global core.autocrlf input</span><br><span class="line">sudo -u git -H git config --global gc.auto 0</span><br></pre></td></tr></table></figure>
</li>
<li><p>resque.yml文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H cp config/resque.yml.example config/resque.yml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>编辑resque.yml文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H vim config/resque.yml</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>本文无修改</p>
</blockquote>
<ul>
<li><p>database.yml文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git cp config/database.yml.postgresql config/database.yml</span><br><span class="line">sudo -u git -H chmod o-rwx config/database.yml</span><br></pre></td></tr></table></figure>
</li>
<li><p>gitlab-shell</p>
<blockquote>
<p>编辑Gemfile<br>改为ruby.taobao.org</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle install --deployment --without development test mysql aws</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:shell:install REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="11-gitlab-workhorse"><a href="#11-gitlab-workhorse" class="headerlink" title="11. gitlab-workhorse"></a><strong>11. gitlab-workhorse</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-workhorse.git</span><br><span class="line">cd gitlab-workhorse</span><br><span class="line">sudo -u git -H git checkout v0.7.2</span><br><span class="line">sudo -u git -H make</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="12-DB-Init"><a href="#12-DB-Init" class="headerlink" title="12. DB Init"></a><strong>12. DB Init</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production</span><br></pre></td></tr></table></figure>
<blockquote>
<p>选 yes</p>
</blockquote>
<hr>
<h2 id="13-gitlab-root"><a href="#13-gitlab-root" class="headerlink" title="13. gitlab root"></a><strong>13. gitlab root</strong></h2><p>更改gitlab root密码，默认无密码，也可初次访问时修改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD=yourpassword GITLAB_ROOT_EMAIL=youremail</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="14-gitlab服务"><a href="#14-gitlab服务" class="headerlink" title="14. gitlab服务"></a><strong>14. gitlab服务</strong></h2><ul>
<li><p>一些配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R ug+rwX,o-rwx /home/git/repositories/</span><br><span class="line">sudo chmod -R ug-s /home/git/repositories/</span><br><span class="line">sudo find /home/git/repositories/ -type d -print0 | sudo xargs -0 chmod g+s</span><br></pre></td></tr></table></figure>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab</span><br><span class="line">chkconfig gitlab on</span><br><span class="line">systemctl start gitlab</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="15-常用查询"><a href="#15-常用查询" class="headerlink" title="15. 常用查询"></a><strong>15. 常用查询</strong></h2><ul>
<li><p>确认应用状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译assets</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="16-Nginx"><a href="#16-Nginx" class="headerlink" title="16. Nginx"></a><strong>16. Nginx</strong></h2><ul>
<li><p>Nginx安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab/</span><br><span class="line">yum -y install nginx</span><br><span class="line">mkdir /etc/nginx/sites-available</span><br><span class="line">mkdir /etc/nginx/sites-enabled</span><br><span class="line">sudo cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab</span><br><span class="line">sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改gitlab配置</p>
<blockquote>
<p>增加server 127.0.0.1:9000</p>
</blockquote>
</li>
<li><p>修改nginx.conf</p>
<blockquote>
<p>增加include /etc/nginx/sites-enabled/*<br>去掉默认的80 server</p>
</blockquote>
</li>
<li><p>自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br><span class="line">systemctl start nginx</span><br><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="17-SELinux设置"><a href="#17-SELinux设置" class="headerlink" title="17. SELinux设置"></a><strong>17. SELinux设置</strong></h2><p>此时nginx还无法访问gitlab等资源，根据SELinux规则做些权限修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce Permissive</span><br></pre></td></tr></table></figure></p>
<p>运行gitlab一段时间，并访问gitlab<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/audit/audit.log</span><br></pre></td></tr></table></figure></p>
<p>可以查看到一些日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep ssh-keygen /var/log/audit/audit.log | audit2allow -M postgreylocal</span><br></pre></td></tr></table></figure></p>
<p>可以制定关于ssh-keygen的一些允许规则，其他“comm”同理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semodule -i postgreylocal.pp</span><br></pre></td></tr></table></figure></p>
<p>可以添加自定义的SELinux策略</p>
<hr>
<h2 id="18-确认安装情况"><a href="#18-确认安装情况" class="headerlink" title="18. 确认安装情况"></a><strong>18. 确认安装情况</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/gitlab/</span><br><span class="line">sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production</span><br></pre></td></tr></table></figure>
<h2 id="19-注意事项"><a href="#19-注意事项" class="headerlink" title="19. 注意事项"></a><strong>19. 注意事项</strong></h2><blockquote>
<p>整个安装过程，在最后配置nginx代理时碰到很多权限问题，这和<a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/SELinux_Users_and_Administrators_Guide/index.html" target="_blank" rel="noopener">SELinux</a>有关，还需要研究，细化权限配置。<br>前文中，端口9000默认在SELinux里开放，故直接使用，后续还应保持8080端口并添加相应权限，避免与其他应用的9000端口冲突。<br>查看端口开放情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">semanage port -l | grep http</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>安装semanage<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install policycoreutils-python</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><a href="https://wiki.centos.org/zh/HowTos/SELinux?highlight=%28selinux%29" target="_blank" rel="noopener">CentOS SELinux</a></li>
<li><a href="https://wiki.centos.org/TipsAndTricks/SelinuxBooleans" target="_blank" rel="noopener">SELinux Booleans</a></li>
<li><a href="http://www.thegeekstuff.com/2012/06/enable-epel-repository/" target="_blank" rel="noopener">EPEL information</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> GitLab </tag>
            
            <tag> Git </tag>
            
            <tag> Redis </tag>
            
            <tag> Ruby on Rails </tag>
            
            <tag> Gem </tag>
            
            <tag> Go </tag>
            
            <tag> PostgreSQL </tag>
            
            <tag> SELinux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7上安装GitLab（RPM）]]></title>
      <url>http://my.fanzicai.com/Program/20160519-CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85GitLab%EF%BC%88RPM%EF%BC%89.html</url>
      <content type="html"><![CDATA[<p><a href="https://about.gitlab.com/" target="_blank" rel="noopener">GitLab</a>是基于<a href="http://www.ruby-lang.org/en/" target="_blank" rel="noopener">Ruby on Rails</a>的一个开源的版本管理系统，其内嵌了Redis。本文在<a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>上安装GitLab.<br><a id="more"></a></p>
<h2 id="1-CentOS安装"><a href="#1-CentOS安装" class="headerlink" title="1. CentOS安装"></a><strong>1. CentOS安装</strong></h2><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS7</a>（Community Enterprise Operation System, 社区企业操作系统）,截至发文时，最新版为CentOS7，本文安装的是64位。</p>
<ul>
<li><p>安装环境：</p>
<blockquote>
<p>VMware® Workstation 12 Pro</p>
</blockquote>
</li>
<li><p>安装版本</p>
<blockquote>
<p><a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS-7-x86_64-Everything-1511</a> </p>
</blockquote>
</li>
<li><p>安装方式</p>
<blockquote>
<p>Minimal Install</p>
</blockquote>
</li>
</ul>
<h2 id="2-GitLab安装"><a href="#2-GitLab安装" class="headerlink" title="2. GitLab安装"></a><strong>2. GitLab安装</strong></h2><ul>
<li><p>准备工作</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum -y install curl openssh-server</span><br><span class="line">systemctl enable sshd</span><br><span class="line">systemctl start sshd</span><br><span class="line">yum -y install postfix</span><br><span class="line">systemctl enable postfix</span><br><span class="line">systemctl start postfix</span><br><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装GitLab<br>无法按照<a href="https://about.gitlab.com/downloads/#centos7" target="_blank" rel="noopener">官网</a>的说明进行安装，原因你懂的！不过，官网提供的镜像安装方式<a href="https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/" target="_blank" rel="noopener">https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/</a>。</p>
<ul>
<li><p>创建文件<em>/etc/yum.repos.d/gitlab-ce.repo</em></p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[gitlab-ce]</span><br><span class="line">name=gitlab-ce</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://packages.gitlab.com/gpg.key</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum -y install gitlab-ce</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>访问GitLab</p>
<blockquote>
<p>http://<em>.</em>.<em>.</em>:80<br>默认管理用户为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line">admin@example.com</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>第一次登录需要更改密码</p>
</blockquote>
</li>
<li><p>常见问题</p>
<ul>
<li>建议使用Chrome等浏览器</li>
<li>亲测360等浏览器不好用</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> CentOS </tag>
            
            <tag> GitLab </tag>
            
            <tag> Git </tag>
            
            <tag> Redis </tag>
            
            <tag> Ruby on Rails </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Preliminary Study]]></title>
      <url>http://my.fanzicai.com/Program/20160518-Hexo-Preliminary-Study.html</url>
      <content type="html"><![CDATA[<p><strong><a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a></strong> is a fast, simple &amp; powerful blog framework. In hexo, we can write posts in <strong>Markdown</strong> (including <strong>GFM</strong>, Github Flavored Markdown).</p>
<a id="more"></a>
<h2 id="1-Hexo-Install"><a href="#1-Hexo-Install" class="headerlink" title="1. Hexo Install"></a><strong>1. Hexo Install</strong></h2><p>Refered in <em><a href="https://hexo.io/docs/index.html" target="_blank" rel="noopener">https://hexo.io/docs/index.html</a></em></p>
<p>Before Hexo installing, need install:</p>
<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>, recommend the LTS Version</li>
<li><a href="https://git-scm.com/download" target="_blank" rel="noopener">Git</a></li>
</ul>
<p>Install Hexo in git bash:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir %Blog_Root_Dir%</span><br><span class="line">cd %Blog_Root_Dir%</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p>
<p>Init Hexo:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init [dir]</span><br></pre></td></tr></table></figure></p>
<h2 id="2-Hexo-and-GitHub-Pages"><a href="#2-Hexo-and-GitHub-Pages" class="headerlink" title="2. Hexo and GitHub Pages"></a><strong>2. Hexo and GitHub Pages</strong></h2><ul>
<li><p>Create Repo on GitHub</p>
<blockquote>
<p>the repo name is <strong><em><a href="https://github.com/fanzicai/fanzicai.github.io" target="_blank" rel="noopener">fanzicai.github.io</a></em></strong></p>
</blockquote>
</li>
<li><p>Edit <em>_config.yml</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">     type: git</span><br><span class="line">     repo: git@github.com:fanzicai/fanzicai.github.io.git</span><br><span class="line">     branch: master</span><br></pre></td></tr></table></figure>
</li>
<li><p>Install deploy-tools</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>Deploy</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo generate         ## or &quot;hexo g&quot;</span><br><span class="line">hexo deploy           ## or &quot;hexo d&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>一键发布<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy g</span><br></pre></td></tr></table></figure></p>
<ul>
<li>View<blockquote>
<p><a href="https://fanzicai.github.io" target="_blank" rel="noopener">https://fanzicai.github.io</a></p>
</blockquote>
</li>
</ul>
<h2 id="3-Hexo-Test"><a href="#3-Hexo-Test" class="headerlink" title="3. Hexo Test"></a><strong>3. Hexo Test</strong></h2><p>Test on <a href="http://127.0.0.1:4000" target="_blank" rel="noopener">http://127.0.0.1:4000</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server          ## or &quot;hexo s&quot;</span><br></pre></td></tr></table></figure>
<h2 id="4-Hexo-Theme"><a href="#4-Hexo-Theme" class="headerlink" title="4. Hexo Theme"></a><strong>4. Hexo Theme</strong></h2><p>For example, the theme “<a href="https://github.com/fanzicai/hexo-theme-athene" target="_blank" rel="noopener">hexo-theme-athene</a>“</p>
<ul>
<li><p>About athene</p>
<ul>
<li>for <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">hexo</a> 3.* and latest</li>
<li>refer to <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a></li>
<li>for learning</li>
</ul>
</li>
</ul>
<ul>
<li><p>Use athene</p>
<ul>
<li><p>install</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd %Blog_Root_Dir%</span><br><span class="line">git clone git@github.com:fanzicai/hexo-theme-athene  themes/athene</span><br></pre></td></tr></table></figure>
</li>
<li><p>configure</p>
<blockquote>
<p>edit the “_config.yml”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: athene</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
</li>
<li><p>Fork Me on GitHub</p>
<blockquote>
<p>Edit “themes/athene/layout.ejs”, insert</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://github.com/fanzicai&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>before &lt; / body &gt;</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
            <tag> 2016 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MarkdownPad 2 Preliminary Study]]></title>
      <url>http://my.fanzicai.com/Program/20160517-MarkdownPad-2-Preliminary-Study.html</url>
      <content type="html"><![CDATA[<p><strong>MarkdownPad</strong> is a full-featured Markdown editor for Windows.</p>
<a id="more"></a>
<h2 id="1-Markdown-Download"><a href="#1-Markdown-Download" class="headerlink" title="1. Markdown Download"></a><strong>1. Markdown Download</strong></h2><p><strong>Download URL</strong> for Windows<strong>:</strong></p>
<blockquote>
<p><em><a href="http://markdownpad.com/download.html" target="_blank" rel="noopener">http://markdownpad.com/download.html</a></em></p>
</blockquote>
<h2 id="2-Free-Key-for-Learning"><a href="#2-Free-Key-for-Learning" class="headerlink" title="2. Free Key for Learning"></a><strong>2. Free Key for Learning</strong></h2><p>Catch from WWW.</p>
<blockquote>
</blockquote>
<ul>
<li><strong>Email:</strong> <a href="mailto:*Soar360@live.com" target="_blank" rel="noopener">*Soar360@live.com</a>*</li>
<li><strong>Key:</strong> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
</blockquote>
<ul>
<li><strong>Remark:</strong> <em>Just for Learning</em></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 2016 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat PermGen Space Error]]></title>
      <url>http://my.fanzicai.com/Program/20150617-Tomcat-PermGen-Space-Error.html</url>
      <content type="html"><![CDATA[<p>PermGen space的全称是Permanent Generation space,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的。</p>
<a id="more"></a>
<h2 id="1-PermGen-Space"><a href="#1-PermGen-Space" class="headerlink" title="1. PermGen Space"></a><strong>1. PermGen Space</strong></h2><p>PermGen space的全称是Permanent Generation space,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的,Class在被Loader时就会被放到PermGen space中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGen space进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误，这种错误常见在web服务器对JSP进行pre compile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。</p>
<hr>
<h2 id="2-MaxPermSize"><a href="#2-MaxPermSize" class="headerlink" title="2. MaxPermSize"></a><strong>2. MaxPermSize</strong></h2><p>解决PermGen Space Error：</p>
<blockquote>
<p>catalina.sh下为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -server -XX:PermSize=128M -XX:MaxPermSize=512m&quot;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="3-Heap-Size"><a href="#3-Heap-Size" class="headerlink" title="3. Heap Size"></a><strong>3. Heap Size</strong></h2><p>解决Heap Size Error：</p>
<blockquote>
<p>catalina.sh下为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS  -server -Xms800m -Xmx800m   -XX:MaxNewSize=256m&quot;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2015 </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Pyramid环境自动安装]]></title>
      <url>http://my.fanzicai.com/Program/20150614-Pyramid%E7%8E%AF%E5%A2%83%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85.html</url>
      <content type="html"><![CDATA[<p>本文在Windows和Linux下自动安装<a href="http://www.pylonsproject.org/" target="_blank" rel="noopener">Pyramid</a>环境。</p>
<a id="more"></a>
<h2 id="1-前置条件"><a href="#1-前置条件" class="headerlink" title="1. 前置条件"></a><strong>1. 前置条件</strong></h2><ul>
<li>安装python</li>
<li>将python安装目录添加至系统环境变量中<blockquote>
<p>windows下，cmd控制台python命令可正常执行<br>linux下，python命令可正常执行</p>
</blockquote>
</li>
<li>解压工具<blockquote>
<p>windows下，须安装winrar，根据实际安装路径更改install.py</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-软件依赖"><a href="#2-软件依赖" class="headerlink" title="2. 软件依赖"></a><strong>2. 软件依赖</strong></h2><p>所需软件包，分别放在5个目录下，目录名为0、1、2、3、4，顺序代表依赖关系，如目录1中安装包依赖0，以此类推。</p>
<ul>
<li><p>0</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setuptools-15.0.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Chameleon-2.22.tar.gz</span><br><span class="line">MarkupSafe-0.23.tar.gz</span><br><span class="line">PasteDeploy-1.5.2.tar.gz</span><br><span class="line">Pygments-2.0.2.tar.gz</span><br><span class="line">repoze.lru-0.6.tar.gz</span><br><span class="line">SQLAlchemy-1.0.0b5.tar.gz</span><br><span class="line">translationstring-1.3.tar.gz</span><br><span class="line">venusian-1.0.tar.gz</span><br><span class="line">waitress-0.8.9.tar.gz</span><br><span class="line">WebOb-1.4.tar.gz</span><br><span class="line">zope.deprecation-4.1.2.tar.gz</span><br><span class="line">zope.interface-4.1.2.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>2</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Mako-1.0.1.tar.gz</span><br><span class="line">pyramid-1.5.4.tar.gz</span><br><span class="line">transaction-1.4.3.tar.gz</span><br><span class="line">zope.exceptions-4.0.7.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>3</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pyramid_chameleon-0.3.tar.gz</span><br><span class="line">pyramid_mako-1.0.2.tar.gz</span><br><span class="line">pyramid_tm-0.11.tar.gz</span><br><span class="line">zope.sqlalchemy-0.7.6.tar.gz</span><br><span class="line">zope.testing-4.1.3.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>4</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyramid_debugtoolbar-2.3.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="3-安装脚本"><a href="#3-安装脚本" class="headerlink" title="3. 安装脚本"></a><strong>3. 安装脚本</strong></h2><ul>
<li>install.py<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">﻿######################################################</span><br><span class="line">#</span><br><span class="line"># This script is used to install pyramid environment.</span><br><span class="line"># Author: fanzi</span><br><span class="line">#</span><br><span class="line">######################################################</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">winrar_file = &apos;c:\\&quot;Program Files&quot;\\WinRAR\\winrar.exe&apos;</span><br><span class="line">target_path = &apos;build&apos;</span><br><span class="line"></span><br><span class="line">def get_file_tar(file_path):</span><br><span class="line">    if not os.path.isdir(file_path):</span><br><span class="line">        return &#123;&#125;</span><br><span class="line"></span><br><span class="line">    files = os.listdir(file_path)</span><br><span class="line">    for name in files:</span><br><span class="line">        if os.path.isdir(name):</span><br><span class="line">            files.remove(name)</span><br><span class="line">        elif (-1 == string.find(name, &apos;tar&apos;)) and (-1 == string.find(name, &apos;zip&apos;)):</span><br><span class="line">            files.remove(name)</span><br><span class="line"></span><br><span class="line">    print files</span><br><span class="line">    return files</span><br><span class="line"></span><br><span class="line">def file_decompress(path, files):</span><br><span class="line">    tmp_dir = os.path.join(path, target_path)</span><br><span class="line">    if not os.path.exists(tmp_dir):</span><br><span class="line">        os.mkdir(tmp_dir)</span><br><span class="line"></span><br><span class="line">    for name in files:</span><br><span class="line">        tmp_file =  os.path.join(path,name)</span><br><span class="line">        if not os.path.isfile(tmp_file):</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        exe_str = &apos;&apos;</span><br><span class="line">        if sys.platform.startswith(&apos;linux&apos;):</span><br><span class="line">            exe_str = &apos;tar xvf &apos; + tmp_file + &apos; -C &apos; + tmp_dir + &apos;/&apos;</span><br><span class="line">        elif sys.platform.startswith(&apos;win&apos;):</span><br><span class="line">            exe_str = winrar_file + &apos; x -o- &apos; + tmp_file + &apos; &apos; + tmp_dir +&apos;\\&apos;</span><br><span class="line"></span><br><span class="line">        print exe_str</span><br><span class="line">        os.system(exe_str)</span><br><span class="line">    </span><br><span class="line">def file_install(path):</span><br><span class="line">    path = os.path.join(path, target_path)</span><br><span class="line">    if not os.path.isdir(path):</span><br><span class="line">        return</span><br><span class="line"></span><br><span class="line">    exe_str = &apos;&apos;</span><br><span class="line">    for dirs in os.listdir(path):</span><br><span class="line">        tmp_dir = os.path.join(path, dirs)</span><br><span class="line">        </span><br><span class="line">        if not os.path.isdir(tmp_dir):</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        os.chdir(tmp_dir)</span><br><span class="line">        #print os.getcwd()</span><br><span class="line">        exe_str = &apos;python setup.py install&apos;</span><br><span class="line">        os.system(exe_str)</span><br><span class="line"></span><br><span class="line">cur_path = os.getcwd()</span><br><span class="line"></span><br><span class="line">cur_dirs = os.listdir(cur_path)</span><br><span class="line">cur_dirs.sort()</span><br><span class="line">for paths in cur_dirs:</span><br><span class="line">    tmp_path = os.path.join(cur_path,paths)</span><br><span class="line">    if not os.path.isdir(tmp_path):</span><br><span class="line">        continue</span><br><span class="line"></span><br><span class="line">    #获取tar或zip安装包列表</span><br><span class="line">    files = get_file_tar(tmp_path)</span><br><span class="line"></span><br><span class="line">    #解压到build文件夹</span><br><span class="line">    file_decompress(tmp_path, files)</span><br><span class="line"></span><br><span class="line">    #从build中安装</span><br><span class="line">    file_install(tmp_path)</span><br><span class="line"></span><br><span class="line">os.chdir(cur_path)</span><br><span class="line">print os.getcwd()</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="4-验证方法"><a href="#4-验证方法" class="headerlink" title="4. 验证方法"></a><strong>4. 验证方法</strong></h2><blockquote>
<p>#windows下，还应把pcreate等所在路径添加系统环境变量中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mkdir $yourenv\webtest</span><br><span class="line">cd    $yourenv\webtest</span><br><span class="line"></span><br><span class="line">#创建测试工程mystarter和myalchemy</span><br><span class="line">pcreate -t starter mystarter</span><br><span class="line">pcreate -t alchemy myalchemy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd mystarter</span><br><span class="line">python setup.py develop</span><br><span class="line">pserve --reload development.ini</span><br><span class="line">#浏览器访问http://127.0.0.1:6543</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd ..\myalchemy</span><br><span class="line">python setup.py develop</span><br><span class="line">#alchemy涉及到数据库的访问</span><br><span class="line">#以使用mysql数据库为例</span><br><span class="line">#ip: 127.0.0.1:3306, user: root, password: 123</span><br><span class="line">#在mysql数据库中添加database: myalchemy</span><br><span class="line">#编辑development.ini</span><br><span class="line">#注释掉“sqlalchemy.url = sqlite:///%(here)s/MyAlchemy.sqlite”</span><br><span class="line">#添加“sqlalchemy.url = mysql://root:123@localhost/myalchemy?charset=utf8”</span><br><span class="line">initialize_myalchemy_db</span><br><span class="line">pserve --reload development.ini</span><br><span class="line">#浏览器访问http://127.0.0.1:6543</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Windows </tag>
            
            <tag> Pyramid </tag>
            
            <tag> 2015 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux Kill命令]]></title>
      <url>http://my.fanzicai.com/Program/20140617-Linux-Kill%E5%91%BD%E4%BB%A4.html</url>
      <content type="html"><![CDATA[<p>使用Linux kill最安全的方法是不加修饰符，不带标志。</p>
<a id="more"></a>
<h2 id="1-绝杀"><a href="#1-绝杀" class="headerlink" title="1. 绝杀"></a><strong>1. 绝杀</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="2-优雅"><a href="#2-优雅" class="headerlink" title="2. 优雅"></a><strong>2. 优雅</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -l PID</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a><strong>3. 其他</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep httpd</span><br><span class="line">ps -ef  PID</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 2014 </tag>
            
            <tag> Shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux-Nginx-Mysql-Python环境搭建]]></title>
      <url>http://my.fanzicai.com/Program/20140614-Linux-Nginx-Mysql-Python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</url>
      <content type="html"><![CDATA[<p>本文在Linux环境下自动部署Nginx、MySQL、Pylons，并自动创建myweb测试用工程，可直接对外提供Web服务。</p>
<a id="more"></a>
<h2 id="1-软件包"><a href="#1-软件包" class="headerlink" title="1. 软件包"></a><strong>1. 软件包</strong></h2><ul>
<li><p>核心包</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx-1.4.6.tar.gz</span><br><span class="line">mysql-5.1.53-linux-i686-glibc23.tar.gz</span><br><span class="line">Python-2.7.5.tar.bz2</span><br><span class="line">MySQL-python-1.2.5.tar</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>辅助包</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openssl-1.0.1f.tar.gz</span><br><span class="line">pcre-8.34.tar.bz2</span><br><span class="line">PyXML-0.8.4.tar.gz</span><br><span class="line">readline-6.2.4.1.tar.gz</span><br><span class="line">setuptools-3.3.tar.gz</span><br><span class="line">sqlite-autoconf-3080002.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>其他包</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2.tar</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>该包为提前在某台Linux机器上安装好的Python目录的压缩包，安装路径为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/python2</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>制作过程：<br>1、源码安装Python2.7.5<br>2、在该python环境下，easy_install安装pylons</p>
</blockquote>
<hr>
<h2 id="2-辅助文件"><a href="#2-辅助文件" class="headerlink" title="2. 辅助文件"></a><strong>2. 辅助文件</strong></h2><ul>
<li><p>mysql.cfg</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"># Example MySQL config file for very large systems.</span><br><span class="line">#</span><br><span class="line"># This is for a large system with memory of 1G-2G where the system runs mainly</span><br><span class="line"># MySQL.</span><br><span class="line">#</span><br><span class="line"># You can copy this file to</span><br><span class="line"># /etc/my.cnf to set global options,</span><br><span class="line"># mysql-data-dir/my.cnf to set server-specific options (in this</span><br><span class="line"># installation this directory is /usr/local/mysql/data) or</span><br><span class="line"># ~/.my.cnf to set user-specific options.</span><br><span class="line">#</span><br><span class="line"># In this file, you can use all long options that a program supports.</span><br><span class="line"># If you want to know which options a program supports, run the program</span><br><span class="line"># with the &quot;--help&quot; option.</span><br><span class="line"></span><br><span class="line"># The following options will be passed to all MySQL clients</span><br><span class="line">[client]</span><br><span class="line">#password	= your_password</span><br><span class="line">port		= 3306</span><br><span class="line">socket		= /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line"># Here follows entries for some specific programs</span><br><span class="line"></span><br><span class="line"># The MySQL server</span><br><span class="line">[mysqld]</span><br><span class="line">port		= 3306</span><br><span class="line">socket		= /tmp/mysql.sock</span><br><span class="line">skip-locking</span><br><span class="line">key_buffer_size = 384M</span><br><span class="line">max_allowed_packet = 1M</span><br><span class="line">table_open_cache = 512</span><br><span class="line">sort_buffer_size = 2M</span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line">thread_cache_size = 8</span><br><span class="line">query_cache_size = 32M</span><br><span class="line"># Try number of CPU&apos;s*2 for thread_concurrency</span><br><span class="line">thread_concurrency = 8</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line"># Don&apos;t listen on a TCP/IP port at all. This can be a security enhancement,</span><br><span class="line"># if all processes that need to connect to mysqld run on the same host.</span><br><span class="line"># All interaction with mysqld must be made via Unix sockets or named pipes.</span><br><span class="line"># Note that using this option without enabling named pipes on Windows</span><br><span class="line"># (via the &quot;enable-named-pipe&quot; option) will render mysqld useless!</span><br><span class="line"># </span><br><span class="line">#skip-networking</span><br><span class="line"></span><br><span class="line"># Replication Master Server (default)</span><br><span class="line"># binary logging is required for replication</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line"># required unique id between 1 and 2^32 - 1</span><br><span class="line"># defaults to 1 if master-host is not set</span><br><span class="line"># but will not function as a master if omitted</span><br><span class="line">server-id	= 1</span><br><span class="line"></span><br><span class="line"># Replication Slave (comment out master section to use this)</span><br><span class="line">#</span><br><span class="line"># To configure this host as a replication slave, you can choose between</span><br><span class="line"># two methods :</span><br><span class="line">#</span><br><span class="line"># 1) Use the CHANGE MASTER TO command (fully described in our manual) -</span><br><span class="line">#    the syntax is:</span><br><span class="line">#</span><br><span class="line">#    CHANGE MASTER TO MASTER_HOST=&lt;host&gt;, MASTER_PORT=&lt;port&gt;,</span><br><span class="line">#    MASTER_USER=&lt;user&gt;, MASTER_PASSWORD=&lt;password&gt; ;</span><br><span class="line">#</span><br><span class="line">#    where you replace &lt;host&gt;, &lt;user&gt;, &lt;password&gt; by quoted strings and</span><br><span class="line">#    &lt;port&gt; by the master&apos;s port number (3306 by default).</span><br><span class="line">#</span><br><span class="line">#    Example:</span><br><span class="line">#</span><br><span class="line">#    CHANGE MASTER TO MASTER_HOST=&apos;125.564.12.1&apos;, MASTER_PORT=3306,</span><br><span class="line">#    MASTER_USER=&apos;joe&apos;, MASTER_PASSWORD=&apos;secret&apos;;</span><br><span class="line">#</span><br><span class="line"># OR</span><br><span class="line">#</span><br><span class="line"># 2) Set the variables below. However, in case you choose this method, then</span><br><span class="line">#    start replication for the first time (even unsuccessfully, for example</span><br><span class="line">#    if you mistyped the password in master-password and the slave fails to</span><br><span class="line">#    connect), the slave will create a master.info file, and any later</span><br><span class="line">#    change in this file to the variables&apos; values below will be ignored and</span><br><span class="line">#    overridden by the content of the master.info file, unless you shutdown</span><br><span class="line">#    the slave server, delete master.info and restart the slaver server.</span><br><span class="line">#    For that reason, you may want to leave the lines below untouched</span><br><span class="line">#    (commented) and instead use CHANGE MASTER TO (see above)</span><br><span class="line">#</span><br><span class="line"># required unique id between 2 and 2^32 - 1</span><br><span class="line"># (and different from the master)</span><br><span class="line"># defaults to 2 if master-host is set</span><br><span class="line"># but will not function as a slave if omitted</span><br><span class="line">#server-id       = 2</span><br><span class="line">#</span><br><span class="line"># The replication master for this slave - required</span><br><span class="line">#master-host     =   &lt;hostname&gt;</span><br><span class="line">#</span><br><span class="line"># The username the slave will use for authentication when connecting</span><br><span class="line"># to the master - required</span><br><span class="line">#master-user     =   &lt;username&gt;</span><br><span class="line">#</span><br><span class="line"># The password the slave will authenticate with when connecting to</span><br><span class="line"># the master - required</span><br><span class="line">#master-password =   &lt;password&gt;</span><br><span class="line">#</span><br><span class="line"># The port the master is listening on.</span><br><span class="line"># optional - defaults to 3306</span><br><span class="line">#master-port     =  &lt;port&gt;</span><br><span class="line">#</span><br><span class="line"># binary logging - not required for slaves, but recommended</span><br><span class="line">#log-bin=mysql-bin</span><br><span class="line">#</span><br><span class="line"># binary logging format - mixed recommended </span><br><span class="line">#binlog_format=mixed</span><br><span class="line"></span><br><span class="line"># Point the following paths to different dedicated disks</span><br><span class="line">#tmpdir		= /tmp/		</span><br><span class="line">#log-update 	= /path-to-dedicated-directory/hostname</span><br><span class="line"></span><br><span class="line"># Uncomment the following if you are using InnoDB tables</span><br><span class="line">#innodb_data_home_dir = /usr/local/mysql/data/</span><br><span class="line">#innodb_data_file_path = ibdata1:2000M;ibdata2:10M:autoextend</span><br><span class="line">#innodb_log_group_home_dir = /usr/local/mysql/data/</span><br><span class="line"># You can set .._buffer_pool_size up to 50 - 80 %</span><br><span class="line"># of RAM but beware of setting memory usage too high</span><br><span class="line">#innodb_buffer_pool_size = 384M</span><br><span class="line">#innodb_additional_mem_pool_size = 20M</span><br><span class="line"># Set .._log_file_size to 25 % of buffer pool size</span><br><span class="line">#innodb_log_file_size = 100M</span><br><span class="line">#innodb_log_buffer_size = 8M</span><br><span class="line">#innodb_flush_log_at_trx_commit = 1</span><br><span class="line">#innodb_lock_wait_timeout = 50</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line"># Remove the next comment character if you are not familiar with SQL</span><br><span class="line">#safe-updates</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 256M</span><br><span class="line">sort_buffer_size = 256M</span><br><span class="line">read_buffer = 2M</span><br><span class="line">write_buffer = 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>nginx.conf</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            #root   html;</span><br><span class="line">            #index  index.html index.htm;</span><br><span class="line">            fastcgi_pass 127.0.0.1:5000;</span><br><span class="line">            fastcgi_param PATH_INFO $fastcgi_script_name;</span><br><span class="line">            fastcgi_param REQUEST_METHOD $request_method;</span><br><span class="line">            fastcgi_param QUERY_STRING $query_string;</span><br><span class="line">            fastcgi_param CONTENT_TYPE $content_type;</span><br><span class="line">            fastcgi_param CONTENT_LENGTH $content_length;</span><br><span class="line">            fastcgi_param  SERVER_ADDR        $server_addr;</span><br><span class="line">            fastcgi_param  SERVER_PORT        $server_port;</span><br><span class="line">            fastcgi_param  SERVER_NAME        $server_name;</span><br><span class="line">            fastcgi_param  SERVER_PROTOCOL    $server_protocol;</span><br><span class="line">            fastcgi_pass_header Authorization;</span><br><span class="line">            fastcgi_intercept_errors off;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">        # concurs with nginx&apos;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl                  on;</span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_protocols  SSLv2 SSLv3 TLSv1;</span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers   on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>development.ini</p>
<blockquote>
<p>myweb工程的配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># myweb - Pylons development environment configuration</span><br><span class="line">#</span><br><span class="line"># The %(here)s variable will be replaced with the parent directory of this file</span><br><span class="line">#</span><br><span class="line">[DEFAULT]</span><br><span class="line">debug = true</span><br><span class="line"># Uncomment and replace with the address which should receive any error reports</span><br><span class="line">#email_to = you@yourdomain.com</span><br><span class="line">smtp_server = localhost</span><br><span class="line">error_email_from = paste@localhost</span><br><span class="line"></span><br><span class="line">[server:main]</span><br><span class="line">use = egg:Flup#fcgi_thread</span><br><span class="line">host = 127.0.0.1</span><br><span class="line">port = 5000</span><br><span class="line"></span><br><span class="line">[app:main]</span><br><span class="line">use = egg:myweb</span><br><span class="line">full_stack = true</span><br><span class="line">static_files = true</span><br><span class="line"></span><br><span class="line">cache_dir = %(here)s/data</span><br><span class="line">beaker.session.key = myweb</span><br><span class="line">beaker.session.secret = somesecret</span><br><span class="line"></span><br><span class="line"># If you&apos;d like to fine-tune the individual locations of the cache data dirs</span><br><span class="line"># for the Cache data, or the Session saves, un-comment the desired settings</span><br><span class="line"># here:</span><br><span class="line">#beaker.cache.data_dir = %(here)s/data/cache</span><br><span class="line">#beaker.session.data_dir = %(here)s/data/sessions</span><br><span class="line"></span><br><span class="line"># WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*</span><br><span class="line"># Debug mode will enable the interactive debugging tool, allowing ANYONE to</span><br><span class="line"># execute malicious code after an exception is raised.</span><br><span class="line">#set debug = false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Logging configuration</span><br><span class="line">[loggers]</span><br><span class="line">keys = root, routes, myweb</span><br><span class="line"></span><br><span class="line">[handlers]</span><br><span class="line">keys = console</span><br><span class="line"></span><br><span class="line">[formatters]</span><br><span class="line">keys = generic</span><br><span class="line"></span><br><span class="line">[logger_root]</span><br><span class="line">level = INFO</span><br><span class="line">handlers = console</span><br><span class="line"></span><br><span class="line">[logger_routes]</span><br><span class="line">level = INFO</span><br><span class="line">handlers =</span><br><span class="line">qualname = routes.middleware</span><br><span class="line"># &quot;level = DEBUG&quot; logs the route matched and routing variables.</span><br><span class="line"></span><br><span class="line">[logger_myweb]</span><br><span class="line">level = DEBUG</span><br><span class="line">handlers =</span><br><span class="line">qualname = myweb</span><br><span class="line"></span><br><span class="line">[handler_console]</span><br><span class="line">class = StreamHandler</span><br><span class="line">args = (sys.stderr,)</span><br><span class="line">level = NOTSET</span><br><span class="line">formatter = generic</span><br><span class="line"></span><br><span class="line">[formatter_generic]</span><br><span class="line">format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s</span><br><span class="line">datefmt = %H:%M:%S</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>rc.nginx</p>
<blockquote>
<p>nginx启动脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides: nginx</span><br><span class="line"># Required-Start: </span><br><span class="line"># Should-Start: </span><br><span class="line"># Required-Stop: </span><br><span class="line"># Default-Start:  2 3 4 5</span><br><span class="line"># Default-Stop: 0 1 6</span><br><span class="line"># Short-Description: start and stop nginx</span><br><span class="line"># Description: </span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># SamERP start/stop script.</span><br><span class="line"></span><br><span class="line">service_startup_timeout=20</span><br><span class="line"></span><br><span class="line"># Set some defaults</span><br><span class="line">nginxdir=/usr/local/nginx</span><br><span class="line"></span><br><span class="line">pid_file=$nginxdir/nginx-`/bin/hostname`.pid</span><br><span class="line">out_file=$nginxdir/runtime.out</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Use LSB init script functions for printing messages, if possible</span><br><span class="line">#</span><br><span class="line">lsb_functions=&quot;/lib/lsb/init-functions&quot;</span><br><span class="line">if test -f $lsb_functions ; then</span><br><span class="line">  . $lsb_functions</span><br><span class="line">else</span><br><span class="line">  log_success_msg()</span><br><span class="line">  &#123;</span><br><span class="line">    echo &quot; SUCCESS! $@&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  log_failure_msg()</span><br><span class="line">  &#123;</span><br><span class="line">    echo &quot; ERROR! $@&quot;</span><br><span class="line">  &#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">mode=$1    # start or stop</span><br><span class="line">shift</span><br><span class="line">other_args=&quot;$*&quot;   # uncommon, but needed when called from an RPM upgrade action</span><br><span class="line">           # Expected: &quot;--skip-networking --skip-grant-tables&quot;</span><br><span class="line">           # They are not checked here, intentionally, as it is the resposibility</span><br><span class="line">           # of the &quot;spec&quot; file author to give correct arguments only.</span><br><span class="line"></span><br><span class="line">case `echo &quot;testing\c&quot;`,`echo -n testing` in</span><br><span class="line">    *c*,-n*) echo_n=   echo_c=     ;;</span><br><span class="line">    *c*,*)   echo_n=-n echo_c=     ;;</span><br><span class="line">    *)       echo_n=   echo_c=&apos;\c&apos; ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">wait_for_pid () &#123;</span><br><span class="line">  verb=&quot;$1&quot;</span><br><span class="line">  manager_pid=&quot;$2&quot;  # process ID of the program operating on the pid-file</span><br><span class="line">  i=0</span><br><span class="line">  avoid_race_condition=&quot;by checking again&quot;</span><br><span class="line">  while test $i -ne $service_startup_timeout ; do</span><br><span class="line">    case &quot;$verb&quot; in</span><br><span class="line">      &apos;created&apos;)</span><br><span class="line">        # wait for a PID-file to pop into existence.</span><br><span class="line">        test -s $pid_file &amp;&amp; i=&apos;&apos; &amp;&amp; break</span><br><span class="line">        ;;</span><br><span class="line">      &apos;removed&apos;)</span><br><span class="line">        # wait for this PID-file to disappear</span><br><span class="line">        test ! -s $pid_file &amp;&amp; i=&apos;&apos; &amp;&amp; break</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo &quot;wait_for_pid () usage: wait_for_pid created|removed manager_pid&quot;</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">    echo $echo_n &quot;.$echo_c&quot;</span><br><span class="line">    i=`expr $i + 1`</span><br><span class="line">    sleep 1</span><br><span class="line">  done</span><br><span class="line"></span><br><span class="line">  if test -z &quot;$i&quot; ; then</span><br><span class="line">    log_success_msg</span><br><span class="line">    return 0</span><br><span class="line">  else</span><br><span class="line">    log_failure_msg</span><br><span class="line">    return 1</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$mode&quot; in</span><br><span class="line">  &apos;start&apos;)</span><br><span class="line">    # Start daemon</span><br><span class="line">    echo $echo_n &quot;Starting Nginx...&quot;</span><br><span class="line">    echo $echo_n $echo_c</span><br><span class="line"></span><br><span class="line">    if test -n &quot;$other_args&quot;</span><br><span class="line">    then</span><br><span class="line">      log_failure_msg &quot;Nginx does not support options &apos;$other_args&apos;&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    if test -s &quot;$pid_file&quot;</span><br><span class="line">    then</span><br><span class="line">      log_failure_msg &quot;Nginx process is already running, stop it first&quot;</span><br><span class="line">      #$0 stop</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    $nginxdir/sbin/nginx &amp;</span><br><span class="line">    nginxpid=`expr $! + 2`</span><br><span class="line">    echo $nginxpid &gt; $pid_file</span><br><span class="line"></span><br><span class="line">    wait_for_pid created $!; return_value=$?</span><br><span class="line"></span><br><span class="line">    exit $return_value</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &apos;stop&apos;)</span><br><span class="line">    # Stop daemon.</span><br><span class="line"></span><br><span class="line">    if test -s &quot;$pid_file&quot;</span><br><span class="line">    then</span><br><span class="line">      nginx_pid=`cat $pid_file`</span><br><span class="line">      </span><br><span class="line">      if (kill -0 $nginx_pid 2&gt;/dev/null)</span><br><span class="line">      then</span><br><span class="line">        echo $echo_n &quot;Shutting down Nginx...&quot;</span><br><span class="line">        kill $nginx_pid</span><br><span class="line">        rm -f $pid_file $out_file</span><br><span class="line">        wait_for_pid removed &quot;$nginx_pid&quot;; return_value=$?</span><br><span class="line">      else</span><br><span class="line">        log_failure_msg &quot;Nginx process #$nginx_pid is not running!&quot;</span><br><span class="line">        rm -f $pid_file $out_file</span><br><span class="line">      fi</span><br><span class="line">      exit $return_value</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;Nginx PID file could not be found!&quot;</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &apos;restart&apos;)</span><br><span class="line">    # Stop the service and regardless of whether it was</span><br><span class="line">    # running or not, start it again.</span><br><span class="line">    if $0 stop  $other_args; then</span><br><span class="line">      $0 start $other_args</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;Failed to stop running nginx, so refusing to try to start.&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">      # usage</span><br><span class="line">      echo &quot;Usage: $0  &#123;start|stop|restart&#125;  [ Nginx server options ]&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>rc.myweb</p>
<blockquote>
<p>myweb启动脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides: myweb</span><br><span class="line"># Required-Start: </span><br><span class="line"># Should-Start: </span><br><span class="line"># Required-Stop: </span><br><span class="line"># Default-Start:  2 3 4 5</span><br><span class="line"># Default-Stop: 0 1 6</span><br><span class="line"># Short-Description: start and stop myweb</span><br><span class="line"># Description: </span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># myweb start/stop script.</span><br><span class="line"></span><br><span class="line">service_startup_timeout=20</span><br><span class="line"></span><br><span class="line"># Set some defaults</span><br><span class="line">mywebdir=/root/myweb</span><br><span class="line">pylonsdir=/usr/local/python2</span><br><span class="line"></span><br><span class="line">pid_file=$mywebdir/myweb-`/bin/hostname`.pid</span><br><span class="line">out_file=$mywebdir/runtime.out</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Use LSB init script functions for printing messages, if possible</span><br><span class="line">#</span><br><span class="line">lsb_functions=&quot;/lib/lsb/init-functions&quot;</span><br><span class="line">if test -f $lsb_functions ; then</span><br><span class="line">  . $lsb_functions</span><br><span class="line">else</span><br><span class="line">  log_success_msg()</span><br><span class="line">  &#123;</span><br><span class="line">    echo &quot; SUCCESS! $@&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  log_failure_msg()</span><br><span class="line">  &#123;</span><br><span class="line">    echo &quot; ERROR! $@&quot;</span><br><span class="line">  &#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">mode=$1    # start or stop</span><br><span class="line">shift</span><br><span class="line">other_args=&quot;$*&quot;   # uncommon, but needed when called from an RPM upgrade action</span><br><span class="line">           # Expected: &quot;--skip-networking --skip-grant-tables&quot;</span><br><span class="line">           # They are not checked here, intentionally, as it is the resposibility</span><br><span class="line">           # of the &quot;spec&quot; file author to give correct arguments only.</span><br><span class="line"></span><br><span class="line">case `echo &quot;testing\c&quot;`,`echo -n testing` in</span><br><span class="line">    *c*,-n*) echo_n=   echo_c=     ;;</span><br><span class="line">    *c*,*)   echo_n=-n echo_c=     ;;</span><br><span class="line">    *)       echo_n=   echo_c=&apos;\c&apos; ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">wait_for_pid () &#123;</span><br><span class="line">  verb=&quot;$1&quot;</span><br><span class="line">  manager_pid=&quot;$2&quot;  # process ID of the program operating on the pid-file</span><br><span class="line">  i=0</span><br><span class="line">  avoid_race_condition=&quot;by checking again&quot;</span><br><span class="line">  while test $i -ne $service_startup_timeout ; do</span><br><span class="line">    case &quot;$verb&quot; in</span><br><span class="line">      &apos;created&apos;)</span><br><span class="line">        # wait for a PID-file to pop into existence.</span><br><span class="line">        test -s $pid_file &amp;&amp; i=&apos;&apos; &amp;&amp; break</span><br><span class="line">        ;;</span><br><span class="line">      &apos;removed&apos;)</span><br><span class="line">        # wait for this PID-file to disappear</span><br><span class="line">        test ! -s $pid_file &amp;&amp; i=&apos;&apos; &amp;&amp; break</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo &quot;wait_for_pid () usage: wait_for_pid created|removed manager_pid&quot;</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">    echo $echo_n &quot;.$echo_c&quot;</span><br><span class="line">    i=`expr $i + 1`</span><br><span class="line">    sleep 1</span><br><span class="line">  done</span><br><span class="line"></span><br><span class="line">  if test -z &quot;$i&quot; ; then</span><br><span class="line">    log_success_msg</span><br><span class="line">    return 0</span><br><span class="line">  else</span><br><span class="line">    log_failure_msg</span><br><span class="line">    return 1</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$mode&quot; in</span><br><span class="line">  &apos;start&apos;)</span><br><span class="line">    # Start daemon</span><br><span class="line">    echo $echo_n &quot;Starting myweb...&quot;</span><br><span class="line">    echo $echo_n $echo_c</span><br><span class="line"></span><br><span class="line">    if test -n &quot;$other_args&quot;</span><br><span class="line">    then</span><br><span class="line">      log_failure_msg &quot;myweb does not support options &apos;$other_args&apos;&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    if test -s &quot;$pid_file&quot;</span><br><span class="line">    then</span><br><span class="line">      log_failure_msg &quot;myweb process is already running, stop it first&quot;</span><br><span class="line">      #$0 stop</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    export PATH=$pylonsdir/bin:$PATH</span><br><span class="line">    cd $mywebdir</span><br><span class="line">    paster serve --reload development.ini &amp;</span><br><span class="line">    echo $! &gt; $pid_file</span><br><span class="line"></span><br><span class="line">    wait_for_pid created $!; return_value=$?</span><br><span class="line"></span><br><span class="line">    exit $return_value</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &apos;stop&apos;)</span><br><span class="line">    # Stop daemon.</span><br><span class="line"></span><br><span class="line">    if test -s &quot;$pid_file&quot;</span><br><span class="line">    then</span><br><span class="line">      myweb_pid=`cat $pid_file`</span><br><span class="line">      </span><br><span class="line">      if (kill -0 $myweb_pid 2&gt;/dev/null)</span><br><span class="line">      then</span><br><span class="line">        echo $echo_n &quot;Shutting down myweb...&quot;</span><br><span class="line">        kill $myweb_pid</span><br><span class="line">        rm -f $pid_file $out_file</span><br><span class="line">        wait_for_pid removed &quot;$myweb_pid&quot;; return_value=$?</span><br><span class="line">      else</span><br><span class="line">        log_failure_msg &quot;myweb process #$myweb_pid is not running!&quot;</span><br><span class="line">        rm -f $pid_file $out_file</span><br><span class="line">      fi</span><br><span class="line">      exit $return_value</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;myweb PID file could not be found!&quot;</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &apos;restart&apos;)</span><br><span class="line">    # Stop the service and regardless of whether it was</span><br><span class="line">    # running or not, start it again.</span><br><span class="line">    if $0 stop  $other_args; then</span><br><span class="line">      $0 start $other_args</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;Failed to stop running myweb, so refusing to try to start.&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line">      # usage</span><br><span class="line">      echo &quot;Usage: $0  &#123;start|stop|restart&#125;  [ myweb server options ]&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="3-安装脚本"><a href="#3-安装脚本" class="headerlink" title="3. 安装脚本"></a><strong>3. 安装脚本</strong></h2><ul>
<li>setup<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">FLAG_CP=</span><br><span class="line">FLAG_CPR=-r</span><br><span class="line">FLAG_TAR=-xf</span><br><span class="line">FLAG_CFG=\&gt;/dev/null</span><br><span class="line">FLAG_MAKE=\&gt;/dev/null</span><br><span class="line">FLAG_INST=\&gt;/dev/null</span><br><span class="line"></span><br><span class="line">toolsdir=/root/tools</span><br><span class="line">builddir=/root/tools/build</span><br><span class="line"></span><br><span class="line">#创建相关文件夹</span><br><span class="line">echo &quot;正在创建相关文件夹......&quot;</span><br><span class="line">mkdir $toolsdir</span><br><span class="line">mkdir $builddir</span><br><span class="line"></span><br><span class="line">#拷贝所有文件到指定目录</span><br><span class="line">echo &quot;正在拷贝文件到指定目录......&quot;</span><br><span class="line">cp $FLAG_CP ./*.* $toolsdir/</span><br><span class="line"></span><br><span class="line">#安装openssl</span><br><span class="line">echo &quot;正在安装openssl......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/openssl-*.*</span><br><span class="line">cd openssl*/</span><br><span class="line">eval ./config $FLAG_CFG</span><br><span class="line">eval make $FLAG_MAKE</span><br><span class="line">eval make install $FLAG_MAKE</span><br><span class="line">ldconfig</span><br><span class="line"></span><br><span class="line">#安装sqlite</span><br><span class="line">echo &quot;正在安装sqlite......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/sqlite-*.*</span><br><span class="line">cd sqlite*/</span><br><span class="line">eval ./configure $FLAG_CFG</span><br><span class="line">eval make $FLAG_MAKE</span><br><span class="line">eval make install $FLAG_MAKE</span><br><span class="line">#ldconfig</span><br><span class="line"></span><br><span class="line">#安装zlib和python</span><br><span class="line">echo &quot;正在安装zlib......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/Python-*.*</span><br><span class="line">cd Python*/Modules/zlib/</span><br><span class="line">eval ./configure $FLAG_CFG</span><br><span class="line">eval make $FLAG_MAKE</span><br><span class="line">eval make install $FLAG_MAKE</span><br><span class="line">echo &quot;正在安装python......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">cd Python*/</span><br><span class="line">eval ./configure --prefix=/usr/local/python2  $FLAG_CFG</span><br><span class="line">eval make $FLAG_MAKE</span><br><span class="line">eval make install $FLAG_MAKE</span><br><span class="line">export PATH=/usr/local/python2/bin:$PATH</span><br><span class="line"></span><br><span class="line">#安装setuptools</span><br><span class="line">echo &quot;正在安装setuptools......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/setuptools-*.*</span><br><span class="line">cd setuptools*/</span><br><span class="line">eval python setup.py install $FLAG_INST</span><br><span class="line"></span><br><span class="line">#安装readline</span><br><span class="line">echo &quot;正在安装readline......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/readline-*.*</span><br><span class="line">cd readline*/</span><br><span class="line">eval python setup.py install $FLAG_INST</span><br><span class="line"></span><br><span class="line">#安装PyXML</span><br><span class="line">echo &quot;正在安装PyXML......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/PyXML-*.*</span><br><span class="line">cd PyXML*/</span><br><span class="line">eval python setup.py install $FLAG_INST</span><br><span class="line"></span><br><span class="line">#安装mysql</span><br><span class="line">echo &quot;正在安装mysql......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/mysql-*.*</span><br><span class="line">cp $FLAG_CPR mysql*/ /usr/local/mysql</span><br><span class="line">cd /usr/local/mysql</span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -g mysql mysql</span><br><span class="line">chown -R root:mysql .</span><br><span class="line">./scripts/mysql_install_db --user=mysql</span><br><span class="line">echo &quot;正在启动mysql......&quot;</span><br><span class="line">#启动mysql、并修改root密码</span><br><span class="line">cp $toolsdir/mysql.cfg /etc/my.cnf</span><br><span class="line">./support-files/mysql.server start</span><br><span class="line">./bin/mysqladmin -u root password &apos;hahaha&apos;</span><br><span class="line">chown -R mysql data</span><br><span class="line">#指定mysql为开机启动</span><br><span class="line">ln -s /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line">#update-rc.d mysql defaults</span><br><span class="line">chkconfig -a mysql</span><br><span class="line">#链接必要的lib*.so文件</span><br><span class="line">ln -s /usr/local/mysql/lib/libmysqlclient_r.so.16 /usr/lib/</span><br><span class="line"></span><br><span class="line">#安装pcre</span><br><span class="line">echo &quot;正在安装pcre......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/pcre-*.*</span><br><span class="line">cd pcre*/</span><br><span class="line">eval ./configure $FLAG_CFG</span><br><span class="line">eval make $FLAG_MAKE</span><br><span class="line">eval make install $FLAG_MAKE</span><br><span class="line"></span><br><span class="line">#安装nginx</span><br><span class="line">echo &quot;正在安装nginx......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/nginx-*.*</span><br><span class="line">cd nginx*/</span><br><span class="line">eval ./configure $FLAG_CFG</span><br><span class="line">eval make $FLAG_MAKE</span><br><span class="line">eval make install $FLAG_MAKE</span><br><span class="line">cp -f $toolsdir/nginx.conf /usr/local/nginx/conf/</span><br><span class="line">cp -f $toolsdir/rc.nginx   /etc/init.d/nginx</span><br><span class="line">chkconfig -a nginx</span><br><span class="line">echo &quot;正在启动nginx......&quot;</span><br><span class="line">service nginx start</span><br><span class="line"></span><br><span class="line">#拷贝pylons</span><br><span class="line">echo &quot;正在部署pylons......&quot;</span><br><span class="line">cd $builddir/</span><br><span class="line">tar $FLAG_TAR $toolsdir/python2*.*</span><br><span class="line">cp -fr python2/ /usr/local/</span><br><span class="line"></span><br><span class="line">#echo &quot;是否在/root目录下创建基本工程myweb,(Y/y or N/n)?&quot;</span><br><span class="line">#read tmp</span><br><span class="line">#创建基本工程myweb</span><br><span class="line">cd /root</span><br><span class="line">paster create -t pylons myweb</span><br><span class="line">cp -f $toolsdir/development.ini /root/myweb/</span><br><span class="line">cp    $toolsdir/rc.myweb        /etc/init.d/myweb</span><br><span class="line">chkconfig -a myweb</span><br><span class="line">echo &quot;正在启动myweb......&quot;</span><br><span class="line">service myweb start</span><br><span class="line">echo &quot;安装过程全部结束，可以通过nginx访问myweb......&quot;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="4-说明文件"><a href="#4-说明文件" class="headerlink" title="4. 说明文件"></a><strong>4. 说明文件</strong></h2><ul>
<li>readme<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">﻿lnmp</span><br><span class="line">    l - linux</span><br><span class="line">    n - nginx</span><br><span class="line">    m - mysql</span><br><span class="line">    p - python/pylons</span><br><span class="line">    </span><br><span class="line">target</span><br><span class="line">    os: suse linux</span><br><span class="line">    base on: gcc g++ bzip ncurses-devel</span><br><span class="line">    </span><br><span class="line">setup</span><br><span class="line">    tar xvf lnmp_tools.tar.gz</span><br><span class="line">    cd lnmp_tools/</span><br><span class="line">    ./setup</span><br><span class="line">    </span><br><span class="line">test</span><br><span class="line">    myweb: the sample project</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SuSE </tag>
            
            <tag> Python </tag>
            
            <tag> Linux </tag>
            
            <tag> Pylons </tag>
            
            <tag> 2014 </tag>
            
            <tag> Nginx </tag>
            
            <tag> MySQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Debian系统安装Python的MySQLdb库]]></title>
      <url>http://my.fanzicai.com/Program/20140614-Debian%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85Python%E7%9A%84MySQLdb%E5%BA%93.html</url>
      <content type="html"><![CDATA[<p>Python访问<a href="http://www.mysql.com/" target="_blank" rel="noopener">MySQL</a>数据库有很多可用的插件，本文选用的是<a href="https://pypi.python.org/pypi/MySQL-python/1.2.5" target="_blank" rel="noopener">MySQL-Python</a>。</p>
<a id="more"></a>
<h2 id="1-安装环境"><a href="#1-安装环境" class="headerlink" title="1. 安装环境"></a><strong>1. 安装环境</strong></h2><ul>
<li>MySQL 5.1</li>
<li>Python 2.6.5</li>
</ul>
<h2 id="2-MySQLdb"><a href="#2-MySQLdb" class="headerlink" title="2. MySQLdb"></a><strong>2. MySQLdb</strong></h2><ul>
<li><p>安装包</p>
<blockquote>
<p>MySQL-python-1.2.3c1.tar.gz<br>setuptools-0.6c11.tar.gz</p>
</blockquote>
</li>
<li><p>Setuptools</p>
<blockquote>
<p>安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python setup.py build</span><br><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>MySQLdb</p>
<blockquote>
<p>编辑site.cfg</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_config = /usr/bin/mysql_config</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>找到本机中的mysql_config路径<br>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python setup.py build</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>测试<br>python命令行下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import MySQLdb</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 2014 </tag>
            
            <tag> Debian </tag>
            
            <tag> MySQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VC环境下回调函数的设计]]></title>
      <url>http://my.fanzicai.com/Program/20130613-VC%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E7%9A%84%E8%AE%BE%E8%AE%A1.html</url>
      <content type="html"><![CDATA[<p>本文描述回调函数的设计思路。</p>
<a id="more"></a>
<h2 id="1-callback"><a href="#1-callback" class="headerlink" title="1. callback"></a><strong>1. callback</strong></h2><ul>
<li><p>Callback.cpp</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// Callback.cpp : Defines the entry point for the DLL application.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &quot;stdafx.h&quot;</span><br><span class="line">#include &quot;Callback.h&quot;</span><br><span class="line"></span><br><span class="line">BOOL APIENTRY DllMain( HANDLE hModule, </span><br><span class="line">                       DWORD  ul_reason_for_call, </span><br><span class="line">                       LPVOID lpReserved</span><br><span class="line">					 )</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void RegisterCallbackFunc(void (*pFunc)(char*))</span><br><span class="line">&#123;</span><br><span class="line">	pMyFunc = pFunc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void CallCallback()</span><br><span class="line">&#123;</span><br><span class="line">	char pcBuf[] = &quot;调用回调函数\n&quot;;</span><br><span class="line">	(*pMyFunc)(pcBuf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>Callback.h</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#ifndef _CALLBACK_H_</span><br><span class="line">#define _CALLBACK_H_</span><br><span class="line"></span><br><span class="line">void (*pMyFunc)(char*);</span><br><span class="line"></span><br><span class="line">void RegisterCallbackFunc(void (*pFunc)(char*));</span><br><span class="line">void CallCallback();</span><br><span class="line"></span><br><span class="line">#endif //_CALLBACK_H_</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-TestCallback"><a href="#2-TestCallback" class="headerlink" title="2. TestCallback"></a><strong>2. TestCallback</strong></h2><ul>
<li><p>TestCallback.h</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">void RegisterCallbackFunc(void (*pFunc)(char*));</span><br><span class="line">void CallCallback();</span><br><span class="line"></span><br><span class="line">void MyFunc(char *pcBuf);</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>TestCallback.cpp</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// TestCallback.cpp : Defines the entry point for the console application.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &quot;stdafx.h&quot;</span><br><span class="line">#include &quot;TestCallback.h&quot;</span><br><span class="line"></span><br><span class="line">int main(int argc, char* argv[])</span><br><span class="line">&#123;</span><br><span class="line">	RegisterCallbackFunc(MyFunc);</span><br><span class="line"></span><br><span class="line">	CallCallback();</span><br><span class="line"></span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void MyFunc(char *pcBuf)</span><br><span class="line">&#123;</span><br><span class="line">	printf(pcBuf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2013 </tag>
            
            <tag> Visual Studio </tag>
            
            <tag> C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux-ARM环境Python调用C库]]></title>
      <url>http://my.fanzicai.com/Program/20130613-Linux-ARM%E7%8E%AF%E5%A2%83Python%E8%B0%83%E7%94%A8C%E5%BA%93.html</url>
      <content type="html"><![CDATA[<p>Python调用C库，通常情况下采用<a href="http://starship.python.net/crew/theller/ctypes/" target="_blank" rel="noopener">ctypes</a>模块。ARM环境下无法使用ctypes，需采用另外一种方式。</p>
<a id="more"></a>
<h2 id="1-py2c工程"><a href="#1-py2c工程" class="headerlink" title="1. py2c工程"></a><strong>1. py2c工程</strong></h2><p>本文的前提是已经在ARM环境编译安装Python。<br>py2c工程，Makefile。</p>
<blockquote>
<p>将python安装目录下的include，添加到Makefile中<br>将python安装目录下的libs，添加到Makefile中</p>
</blockquote>
<ul>
<li><p>py2c.c</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">/* Example of embedding Python in another program */</span><br><span class="line"></span><br><span class="line">#include &quot;Python.h&quot;</span><br><span class="line"></span><br><span class="line">void initpy2c(void); /* Forward */</span><br><span class="line"></span><br><span class="line">static PyObject *py2cError;</span><br><span class="line"></span><br><span class="line">int</span><br><span class="line">main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    /* Pass argv[0] to the Python interpreter */</span><br><span class="line">    Py_SetProgramName(argv[0]);</span><br><span class="line">    </span><br><span class="line">    /* Initialize the Python interpreter.  Required. */</span><br><span class="line">    Py_Initialize();</span><br><span class="line">    </span><br><span class="line">    /* Add a static module */</span><br><span class="line">    initpy2c();</span><br><span class="line">    </span><br><span class="line">    /* Define sys.argv.  It is up to the application if you</span><br><span class="line">       want this; you can also let it undefined (since the Python </span><br><span class="line">       code is generally not a main program it has no business</span><br><span class="line">       touching sys.argv...) */</span><br><span class="line">    PySys_SetArgv(argc, argv);</span><br><span class="line">    </span><br><span class="line">    /* Do some application specific code */</span><br><span class="line">    printf(&quot;Hello, brave new world\n\n&quot;);</span><br><span class="line">    </span><br><span class="line">    /* Execute some Python statements (in module __main__) */</span><br><span class="line">    PyRun_SimpleString(&quot;import sys\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.builtin_module_names\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.modules.keys()\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.executable\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.argv\n&quot;);</span><br><span class="line">    </span><br><span class="line">    /* Note that you can call any public function of the Python</span><br><span class="line">       interpreter here, e.g. call_object(). */</span><br><span class="line">    </span><br><span class="line">    /* Some more application specific code */</span><br><span class="line">    printf(&quot;\nGoodbye, cruel world\n&quot;);</span><br><span class="line">    </span><br><span class="line">    /* Exit, cleaning up the interpreter */</span><br><span class="line">    Py_Exit(0);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">    /*NOTREACHED*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* A static module */</span><br><span class="line"></span><br><span class="line">/* &apos;self&apos; is not used */</span><br><span class="line">static PyObject *</span><br><span class="line">py2c_test(PyObject *self, PyObject* args)</span><br><span class="line">&#123;</span><br><span class="line">    const char *command;</span><br><span class="line">    int sts;</span><br><span class="line"></span><br><span class="line">    if (!PyArg_ParseTuple(args, &quot;s&quot;, &amp;command))</span><br><span class="line">        return NULL;</span><br><span class="line">    </span><br><span class="line">    sts = printf(command);</span><br><span class="line">    </span><br><span class="line">    if (sts &lt; 0) &#123;</span><br><span class="line">        PyErr_SetString(py2cError, &quot;py2c test function failed!\n&quot;);</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">    </span><br><span class="line">    return Py_BuildValue(&quot;i&quot;, sts);</span><br><span class="line">    //return PyInt_FromLong(sts);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static PyMethodDef py2c_methods[] = &#123;</span><br><span class="line">    &#123;&quot;test&quot;,		py2c_test,	METH_VARARGS, //METH_NOARGS,</span><br><span class="line">     &quot;print string.&quot;&#125;,</span><br><span class="line">    &#123;NULL,		NULL&#125;		/* sentinel */</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">void</span><br><span class="line">initpy2c(void)</span><br><span class="line">&#123;</span><br><span class="line">    PyObject *m;</span><br><span class="line">    </span><br><span class="line">    PyImport_AddModule(&quot;py2c&quot;);</span><br><span class="line">    </span><br><span class="line">    m = Py_InitModule(&quot;py2c&quot;, py2c_methods);</span><br><span class="line">    if(m==NULL)</span><br><span class="line">        return;</span><br><span class="line">    </span><br><span class="line">    py2cError = PyErr_NewException(&quot;py2c.error&quot;, NULL, NULL);</span><br><span class="line">    Py_INCREF(py2cError);</span><br><span class="line">    PyModule_AddObject(m, &quot;error&quot;, py2cError);</span><br><span class="line">    </span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>MakefileARM</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># Makefile for embedded Python use dispy2c.</span><br><span class="line"># (This version tailored for my Red Hat Linux 6.1 setup;</span><br><span class="line"># edit lines marked with XXX.)</span><br><span class="line"></span><br><span class="line"># XXX The compiler you are using</span><br><span class="line">CC= arm-\*\*\*-gcc</span><br><span class="line"></span><br><span class="line"># XXX Top of the build tree and source tree</span><br><span class="line">#blddir=		../..</span><br><span class="line">#srcdir=		../..</span><br><span class="line">libdir= /root/rootfs/usr/local/lib</span><br><span class="line">srcdir= /root/rootfs/usr/local/include</span><br><span class="line"></span><br><span class="line"># Python version</span><br><span class="line">VERSION=	2.6   # or 2.7</span><br><span class="line"></span><br><span class="line"># Compiler flags</span><br><span class="line">OPT=	</span><br><span class="line">INCLUDES=	-I$(srcdir)/python$(VERSION) -I$(srcdir)</span><br><span class="line">CFLAGS=		$(OPT)</span><br><span class="line">CPPFLAGS=	$(INCLUDES)</span><br><span class="line"></span><br><span class="line"># The Python library</span><br><span class="line">LIBPYTHON=	$(libdir)/python2.6/config/libpython$(VERSION).a</span><br><span class="line">LIBEXTERN=</span><br><span class="line">#LIBEXTERN=  ./*.a</span><br><span class="line"></span><br><span class="line"># XXX edit LIBS (in particular) to match $(blddir)/Modules/Makefile</span><br><span class="line">#LIBS=		-lnsl -ldl -lreadline -ltermcap -lieee -lpthread -lutil</span><br><span class="line">LIBS=		-lnsl -ldl -lieee -lpthread -lutil</span><br><span class="line">LDFLAGS=	-Xlinker -export-dynamic -static</span><br><span class="line">SYSLIBS=	-lm</span><br><span class="line">MODLIBS=	</span><br><span class="line">ALLLIBS=	$(LIBPYTHON) $(LIBEXTERN) $(MODLIBS) $(LIBS) $(SYSLIBS)</span><br><span class="line"></span><br><span class="line"># Build the dispy2c applications</span><br><span class="line">#all:		dispy2c.so</span><br><span class="line">#dispy2c:		dispy2c.so</span><br><span class="line">#		$(CC) $(LDFLAGS) dispy2c.o $(ALLLIBS) -o dispy2c </span><br><span class="line"></span><br><span class="line">dispy2c.so: dispy2c.o</span><br><span class="line">	$(CC) $(CFLAGS) $(INCLUDES) -shared -fPIC -fvisibility=default -o dispy2c.so dispy2c.c $(LIBEXTERN) $(LIBPYTHON)</span><br><span class="line"></span><br><span class="line">dispy2c.o: dispy2c.c</span><br><span class="line">	$(CC) $(CFLAGS) $(INCLUDES) -c dispy2c.c</span><br><span class="line"></span><br><span class="line"># Administrative targets</span><br><span class="line"></span><br><span class="line">test: dispy2c</span><br><span class="line">		./dispy2c</span><br><span class="line"></span><br><span class="line">COMMAND=&quot;print &apos;hello world&apos;&quot;</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">		-rm -f *.o *.so dispy2c</span><br><span class="line"></span><br><span class="line">clobber:	clean</span><br><span class="line">		-rm -f *~ @* &apos;#&apos;* dispy2c</span><br><span class="line"></span><br><span class="line">realclean:	clobber</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>setup.py</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from distutils.core import setup, Extension</span><br><span class="line"></span><br><span class="line">module1 = Extension(&apos;py2c&apos;,</span><br><span class="line">                    define_macros = [(&apos;MAJOR_VERSION&apos;, &apos;1&apos;),</span><br><span class="line">                                     (&apos;MINOR_VERSION&apos;, &apos;0&apos;)],</span><br><span class="line">                    #include_dirs = [&apos;/usr/local/include&apos;],</span><br><span class="line">                    libraries = [&apos;libtest.a&apos;],</span><br><span class="line">                    #library_dirs = [&apos;./&apos;],</span><br><span class="line">                    sources = [&apos;py2c.c&apos;])</span><br><span class="line"></span><br><span class="line">setup (name = &apos;py2c&apos;,</span><br><span class="line">       version = &apos;1.0&apos;,</span><br><span class="line">       description = &apos;This is a py2c package&apos;,</span><br><span class="line">       author = &apos;&apos;,</span><br><span class="line">       author_email = &apos;&apos;,</span><br><span class="line">       url = &apos;&apos;,</span><br><span class="line">       long_description = &apos;This is really just a py2c package.&apos;,</span><br><span class="line">       ext_modules = [module1])</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>编译</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -f MakefileARM</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>将py2c.so拷贝到python安装目录下的lib/python2.6/site-packages目录中。<br>同时将x86环境下生成的py2c-1.0-py2.6.egg-info文件拷贝到python安装目录下的lib/python2.6/site-packages目录中</p>
</blockquote>
<hr>
<h2 id="3-使用py2c"><a href="#3-使用py2c" class="headerlink" title="3. 使用py2c"></a><strong>3. 使用py2c</strong></h2><blockquote>
<p>将编译生成的py2c.dll文件改名为py2c.pyd，然后放到python安装目录下的DLLS目录中<br>运行python<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import py2c</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="4-py2c调用其他库"><a href="#4-py2c调用其他库" class="headerlink" title="4. py2c调用其他库"></a><strong>4. py2c调用其他库</strong></h2><p>本文中py2c_test函数还可以调用其他已有的C库的函数，相当于通过py2c调用现有的C库。</p>
<blockquote>
<p>假设现有库为libtest.a<br>保证libtest.a、ltest.h在py2c目录下<br>Makefile中静态引用了py2c目录下的libtest.a<br>setup.py中引用了py2c目录下的libtest.a</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 2013 </tag>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
            <tag> ARM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux-ARM环境Python编译安装]]></title>
      <url>http://my.fanzicai.com/Program/20130613-Linux-ARM%E7%8E%AF%E5%A2%83Python%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a>（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象、解释型计算机程序设计语言，由Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。<br>Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议。</p>
<a id="more"></a>
<h2 id="1-Python2-6"><a href="#1-Python2-6" class="headerlink" title="1. Python2.6"></a><strong>1. Python2.6</strong></h2><ul>
<li>1.1. 准备工作<blockquote>
<p>源码包有：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Python-2.6.5.tar.bz2</span><br><span class="line">sqlite-autoconf-3071700.tar.gz</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>arm运行环境下的网络文件系统根目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/rootfs</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>交叉编译环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arm-***.tar.bz2</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>解压后目录为arm-***/<br>将arm-***/bin目录添加到环境变量<br>方法一：export PATH=$PATH:/解压目录/arm-***/bin<br>方法二：/etc/profile文件末尾增加”PATH=$PATH:/解压目录/arm-***/bin”</p>
</blockquote>
<ul>
<li>1.2. zlib<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Python2.6.5/Modules/zlib</span><br><span class="line">./configure --prefix=/root/rootfs</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>修改Makefile<br>将CC=gcc改为CC=arm-***-gcc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>1.3. sqlite<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xvf sqlite-autoconf-3071700.tar.gz</span><br><span class="line">cd sqlite-autoconf-3071700</span><br><span class="line">./configure --host=arm-none-linux-gnueabi --prefix=/root/rootfs --enable-shared --disable-readline --disable-dynamic-extensions</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>修改Makefile<br>a. 将CFLAG的-g去掉<br>b. 将CXXFLAG的-g去掉<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>1.4. pgen</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar xvf Python-2.6.5.tar.bz2</span><br><span class="line">cd Python-2.6.5</span><br><span class="line">mkdir build.pc</span><br><span class="line">cd build.pc</span><br><span class="line">../configure</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.5. configure修改</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd Python-2.6.5</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>删除从“起始于”到”结束于“的内容<br>起始于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123; echo &quot;$as_me:$LINENO: checking for %zd printf() format support&quot; &gt;&amp;5</span><br><span class="line">echo $ECHO_N &quot;checking for %zd printf() format support... $ECHO_C&quot; &gt;&amp;6; &#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>结束于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fi</span><br><span class="line">rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>1.6. Makefile生成</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd Python-2.6.5</span><br><span class="line">mkdir build.arm</span><br><span class="line">cd build.arm</span><br><span class="line">../configure --host=arm-\*\*\* --prefix=/root/rootfs --enable-shared –disable-ipv6</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.7. Makefile修改</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd Python-2.6.5/build.arm</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<ul>
<li>行OPT=        -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes<br>改为OPT=        -DNDEBUG -fwrapv –O2 -Wall -Wstrict-prototypes</li>
<li>行PGEN=        Parser/pgen$(EXE)下添加<br>GEN_HOST = ../build.pc/Parser/pgen$(EXE)<br>PYTHON_HOST= ../build.pc/python$(EXE)</li>
<li>在使用PGEN的地方改为PGEN_HOST，亦即<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(GRAMMAR_H) $(GRAMMAR_C): $(PGEN) $(GRAMMAR_INPUT)</span><br><span class="line">		-@$(INSTALL) -d Include</span><br><span class="line">		-$(PGEN) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<blockquote>
<p>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(GRAMMAR_H) $(GRAMMAR_C): $(PGEN) $(GRAMMAR_INPUT)</span><br><span class="line">		-@$(INSTALL) -d Include</span><br><span class="line">		-$(PGEN_HOST) $(GRAMMAR_INPUT) $(GRAMMAR_H) $(GRAMMAR_C)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<ul>
<li>所有的./$(BUILDPYTHON)都改为./$(PYTHON_HOST)</li>
</ul>
</blockquote>
<ul>
<li>1.8. setup.py修改<blockquote>
<ul>
<li>行build_ext.build_extension(self, ext)后面加return</li>
<li>删除行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_dir_to_list(self.compiler.library_dirs, &apos;/usr/local/lib&apos;)</span><br><span class="line">add_dir_to_list(self.compiler.include_dirs, &apos;/usr/local/include&apos;)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
</li>
</ul>
<blockquote>
<ul>
<li>行lib_dirs = self.compiler.library_dirs + [‘/lib64’, ‘/usr/lib64’,            ‘/lib’,’/usr/lib’,]<br>改为lib_dirs = self.compiler.library_dirs + []</li>
<li>行inc_dirs = self.compiler.include_dirs + [‘/usr/include’]<br>改为inc_dirs = self.compiler.include_dirs + []</li>
<li>行        for d in inc_dirs + sqlite_inc_paths:<br>改为        for d in [‘/root/rootfs/include’]:</li>
<li>Main函数中<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scripts = [&apos;Tools/scripts/pydoc&apos;, &apos;Tools/scripts/idle&apos;,</span><br><span class="line">           &apos;Tools/scripts/2to3&apos;,</span><br><span class="line">           &apos;Lib/smtpd.py&apos;]</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<blockquote>
<p>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scripts = []</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<ul>
<li>行disabled_module_list = []<br>改为disabled_module_list = [‘_ctypes’]</li>
<li>行if (self.compiler.find_library_file(lib_dirs, ‘z’)):<br>改为if (self.compiler.find_library_file([‘/root/rootfs/lib’], ‘z’)):</li>
<li>行zlib_extra_link_args = ()<br>改为zlib_extra_link_args = (‘-L/root/rootfs/lib’,)</li>
</ul>
</blockquote>
<ul>
<li><p>1.9. 解决Binascii和zlib问题</p>
<blockquote>
<p>当/usr/local/lib/目录下有libz.a，libz.so两个文件时，将该两文件删除或者分别改名为libz.a.bak，libz.so.bak</p>
</blockquote>
</li>
<li><p>1.10. 编译安装</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Python-2.6.5/build.arm</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.11. 精简Python</p>
<blockquote>
<p>cleanpy-2.6.sh</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">DELFILE=&quot;</span><br><span class="line">	bin/idle </span><br><span class="line">	bin/pydoc</span><br><span class="line">	lib/python2.6/pydoc.pyo</span><br><span class="line">	lib/python2.6/decimal.pyo</span><br><span class="line">	lib/python2.6/doctest.pyo</span><br><span class="line">	lib/python2.6/mailbox.pyo</span><br><span class="line">	lib/python2.6/tarfile.pyo</span><br><span class="line">	lib/python2.6/difflib.pyo</span><br><span class="line">	lib/python2.6/imaplib.pyo</span><br><span class="line">	lib/python2.6/gopherlib.pyo</span><br><span class="line">	lib/python2.6/mhlib.pyo</span><br><span class="line">	lib/python2.6/nntplib.pyo</span><br><span class="line">	lib/python2.6/audiodev.pyo</span><br><span class="line">	lib/python2.6/hashlib.pyo</span><br><span class="line">	lib/python2.6/lib-dynload/audioop.so</span><br><span class="line">	lib/python2.6/lib-dynload/_ctypes_test.so</span><br><span class="line">	lib/python2.6/lib-dynload/_curses.so</span><br><span class="line">	lib/python2.6/lib-dynload/_curses_panel.so</span><br><span class="line">	lib/python2.6/lib-dynload/imageop.so</span><br><span class="line">	lib/python2.6/lib-dynload/linuxaudiodev.so</span><br><span class="line">	lib/python2.6/lib-dynload/ossaudiodev.so</span><br><span class="line">	lib/python2.6/lib-dynload/rgbimg.so</span><br><span class="line">	lib/python2.6/lib-dynload/_sha512.so</span><br><span class="line">	lib/python2.6/lib-dynload/_sha256.so</span><br><span class="line">	lib/python2.6/lib-dynload/pyexpat.so</span><br><span class="line">	lib/python2.6/lib-dynload/Python-2.5.1.egg-info</span><br><span class="line">	lib/python2.6/lib-dynload/_codecs_*.so</span><br><span class="line">	lib/python2.6/lib-dynload/*_failed.so</span><br><span class="line">	&quot;</span><br><span class="line">DELDIR=&quot;</span><br><span class="line">	man </span><br><span class="line">	lib/python2.6/lib-tk		 </span><br><span class="line">	lib/python2.6/ctypes		 </span><br><span class="line">	lib/python2.6/email</span><br><span class="line">	lib/python2.6/lib2to3</span><br><span class="line">	lib/python2.6/xml</span><br><span class="line">	lib/python2.6/json</span><br><span class="line">	lib/python2.6/lib-old</span><br><span class="line">	lib/python2.6/plat-linux2</span><br><span class="line">	lib/python2.6/curses		 </span><br><span class="line">	lib/python2.6/idlelib/		 </span><br><span class="line">	lib/python2.6/test		 </span><br><span class="line">	lib/python2.6/sqlite3/test	 </span><br><span class="line">	lib/python2.6/bsddb/		 </span><br><span class="line">	lib/python2.6/distutils</span><br><span class="line">	lib/python2.6/email/test/	 </span><br><span class="line">	lib/python2.6/ctypes/test/	 </span><br><span class="line">	&quot;</span><br><span class="line"></span><br><span class="line">for i in $DELFILE ;</span><br><span class="line">do</span><br><span class="line">	[ -f $i ] &amp;&amp; echo &quot;exist file:&quot; $i &amp;&amp; rm -f $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo</span><br><span class="line">echo</span><br><span class="line"></span><br><span class="line">for i in $DELDIR ;</span><br><span class="line">do</span><br><span class="line">	[ -d $i ] &amp;&amp; echo &quot;exist dir:&quot; $i &amp;&amp; rm -rf $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">find lib/python2.6 -name &apos;*.py&apos; -exec rm -f \&#123;\&#125; \;</span><br><span class="line">find lib/python2.6 -name &apos;*.pyc&apos; -exec rm -f \&#123;\&#125; \;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>将cleanpy-2.6.sh拷贝到/root/rootfs/下，并运行即可</p>
</blockquote>
<ul>
<li>1.12. 运行Python<blockquote>
<p>在ARM环境下，运行python之前<br>执行export PYTHONHOME=/<br>在执行python时，增加关键字-OO</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -OO xxx.py</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-Python2-7"><a href="#2-Python2-7" class="headerlink" title="2. Python2.7"></a><strong>2. Python2.7</strong></h2><ul>
<li>1.1. 准备工作<blockquote>
<p>源码包有：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Python-2.7.5.tgz</span><br><span class="line">Python-2.7.5-xcompile.patch</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>arm运行环境下的网络文件系统根目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/rootfs</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>交叉编译环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arm-***.tar.bz2</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>解压后目录为arm-***/<br>将arm-***/bin目录添加到环境变量<br>方法一：export PATH=$PATH:/解压目录/arm-***/bin<br>方法二：/etc/profile文件末尾增加”PATH=$PATH:/解压目录/arm-***/bin”</p>
</blockquote>
<ul>
<li><p>1.2. 解压</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export RFS=/root/rootfs</span><br><span class="line">tar xvf Python-2.7.5.tgz</span><br><span class="line">cp XXX/Python-2.7.5-xcompile.patch Python-2.7.5/</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.3. 编译x86工具</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd Python-2.7.5/</span><br><span class="line">./configure</span><br><span class="line">make python Parser/pgen</span><br><span class="line">mv python python_for_build</span><br><span class="line">mv Parser/pgen Parser/pgen_for_build</span><br><span class="line">make distclean</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.4. patch补丁</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch –p 1 &lt; Python-2.7.5-xcompile.patch</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>运行后，根据提示输入要patch的文件</p>
</blockquote>
<ul>
<li><p>1.5. configure</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --host=arm-none-linux-gnueabi --build=i686-linux-gnu --prefix=/ ac_cv_file__dev_ptmx=no ac_cv_file__dev_ptc=no ac_cv_have_long_long_format=yes</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.6. make</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make –jobs=8 CFLAGS=&quot;-g0 -Os -s -I$&#123;RFS&#125;/usr/include -fdata-sections -ffunction-sections&quot; LDFLAGS=&apos;-L$&#123;RFS&#125;/usr/lib -L$&#123;RFS&#125;/lib&apos;</span><br><span class="line">make install DESTDIR=$&#123;RFS&#125; PATH=”$&#123;PATH&#125;”</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>1.7. 精简Python</p>
<blockquote>
<p>cleanpy-2.7.sh</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">DELFILE=&quot;</span><br><span class="line">	bin/idle </span><br><span class="line">	bin/pydoc</span><br><span class="line">	lib/python2.7/pydoc.pyo</span><br><span class="line">	lib/python2.7/decimal.pyo</span><br><span class="line">	lib/python2.7/doctest.pyo</span><br><span class="line">	lib/python2.7/mailbox.pyo</span><br><span class="line">	lib/python2.7/tarfile.pyo</span><br><span class="line">	lib/python2.7/difflib.pyo</span><br><span class="line">	lib/python2.7/imaplib.pyo</span><br><span class="line">	lib/python2.7/gopherlib.pyo</span><br><span class="line">	lib/python2.7/mhlib.pyo</span><br><span class="line">	lib/python2.7/nntplib.pyo</span><br><span class="line">	lib/python2.7/audiodev.pyo</span><br><span class="line">	lib/python2.7/hashlib.pyo</span><br><span class="line">	lib/python2.7/lib-dynload/audioop.so</span><br><span class="line">	lib/python2.7/lib-dynload/_ctypes_test.so</span><br><span class="line">	lib/python2.7/lib-dynload/_curses.so</span><br><span class="line">	lib/python2.7/lib-dynload/_curses_panel.so</span><br><span class="line">	lib/python2.7/lib-dynload/imageop.so</span><br><span class="line">	lib/python2.7/lib-dynload/linuxaudiodev.so</span><br><span class="line">	lib/python2.7/lib-dynload/ossaudiodev.so</span><br><span class="line">	lib/python2.7/lib-dynload/rgbimg.so</span><br><span class="line">	lib/python2.7/lib-dynload/_sha512.so</span><br><span class="line">	lib/python2.7/lib-dynload/_sha256.so</span><br><span class="line">	lib/python2.7/lib-dynload/pyexpat.so</span><br><span class="line">	lib/python2.7/lib-dynload/Python-2.5.1.egg-info</span><br><span class="line">	lib/python2.7/lib-dynload/_codecs_*.so</span><br><span class="line">	lib/python2.7/lib-dynload/*_failed.so</span><br><span class="line">	&quot;</span><br><span class="line">DELDIR=&quot;</span><br><span class="line">	man </span><br><span class="line">	lib/python2.7/lib-tk		 </span><br><span class="line">	lib/python2.7/ctypes		 </span><br><span class="line">	lib/python2.7/email</span><br><span class="line">	lib/python2.7/lib2to3</span><br><span class="line">	lib/python2.7/xml</span><br><span class="line">	lib/python2.7/json</span><br><span class="line">	lib/python2.7/lib-old</span><br><span class="line">	lib/python2.7/plat-linux2</span><br><span class="line">	lib/python2.7/curses		 </span><br><span class="line">	lib/python2.7/idlelib/		 </span><br><span class="line">	lib/python2.7/test		 </span><br><span class="line">	lib/python2.7/sqlite3/test	 </span><br><span class="line">	lib/python2.7/bsddb/		 </span><br><span class="line">	lib/python2.7/distutils</span><br><span class="line">	lib/python2.7/email/test/	 </span><br><span class="line">	lib/python2.7/ctypes/test/	 </span><br><span class="line">	&quot;</span><br><span class="line"></span><br><span class="line">for i in $DELFILE ;</span><br><span class="line">do</span><br><span class="line">	[ -f $i ] &amp;&amp; echo &quot;exist file:&quot; $i &amp;&amp; rm -f $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo</span><br><span class="line">echo</span><br><span class="line"></span><br><span class="line">for i in $DELDIR ;</span><br><span class="line">do</span><br><span class="line">	[ -d $i ] &amp;&amp; echo &quot;exist dir:&quot; $i &amp;&amp; rm -rf $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">find lib/python2.7 -name &apos;*.py&apos; -exec rm -f \&#123;\&#125; \;</span><br><span class="line">find lib/python2.7 -name &apos;*.pyc&apos; -exec rm -f \&#123;\&#125; \;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>将cleanpy-2.6.sh拷贝到/root/rootfs/下，并运行即可</p>
</blockquote>
<ul>
<li>1.8. 运行Python<blockquote>
<p>在ARM环境下，运行python之前<br>执行export PYTHONHOME=/<br>在执行python时，增加关键字-OO</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -OO xxx.py</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 2013 </tag>
            
            <tag> Linux </tag>
            
            <tag> ARM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux-x86环境Python调用C库]]></title>
      <url>http://my.fanzicai.com/Program/20130613-Linux-x86%E7%8E%AF%E5%A2%83Python%E8%B0%83%E7%94%A8C%E5%BA%93.html</url>
      <content type="html"><![CDATA[<p>Python调用C库，通常情况下采用<a href="http://starship.python.net/crew/theller/ctypes/" target="_blank" rel="noopener">ctypes</a>模块。本文则采用另外一种方式。</p>
<a id="more"></a>
<h2 id="1-py2c工程"><a href="#1-py2c工程" class="headerlink" title="1. py2c工程"></a><strong>1. py2c工程</strong></h2><p>py2c工程，Makefile。</p>
<blockquote>
<p>将python安装目录下的include，添加到Makefile中<br>将python安装目录下的libs，添加到Makefile中</p>
</blockquote>
<ul>
<li><p>py2c.c</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">/* Example of embedding Python in another program */</span><br><span class="line"></span><br><span class="line">#include &quot;Python.h&quot;</span><br><span class="line"></span><br><span class="line">void initpy2c(void); /* Forward */</span><br><span class="line"></span><br><span class="line">static PyObject *py2cError;</span><br><span class="line"></span><br><span class="line">int</span><br><span class="line">main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    /* Pass argv[0] to the Python interpreter */</span><br><span class="line">    Py_SetProgramName(argv[0]);</span><br><span class="line">    </span><br><span class="line">    /* Initialize the Python interpreter.  Required. */</span><br><span class="line">    Py_Initialize();</span><br><span class="line">    </span><br><span class="line">    /* Add a static module */</span><br><span class="line">    initpy2c();</span><br><span class="line">    </span><br><span class="line">    /* Define sys.argv.  It is up to the application if you</span><br><span class="line">       want this; you can also let it undefined (since the Python </span><br><span class="line">       code is generally not a main program it has no business</span><br><span class="line">       touching sys.argv...) */</span><br><span class="line">    PySys_SetArgv(argc, argv);</span><br><span class="line">    </span><br><span class="line">    /* Do some application specific code */</span><br><span class="line">    printf(&quot;Hello, brave new world\n\n&quot;);</span><br><span class="line">    </span><br><span class="line">    /* Execute some Python statements (in module __main__) */</span><br><span class="line">    PyRun_SimpleString(&quot;import sys\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.builtin_module_names\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.modules.keys()\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.executable\n&quot;);</span><br><span class="line">    PyRun_SimpleString(&quot;print sys.argv\n&quot;);</span><br><span class="line">    </span><br><span class="line">    /* Note that you can call any public function of the Python</span><br><span class="line">       interpreter here, e.g. call_object(). */</span><br><span class="line">    </span><br><span class="line">    /* Some more application specific code */</span><br><span class="line">    printf(&quot;\nGoodbye, cruel world\n&quot;);</span><br><span class="line">    </span><br><span class="line">    /* Exit, cleaning up the interpreter */</span><br><span class="line">    Py_Exit(0);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">    /*NOTREACHED*/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* A static module */</span><br><span class="line"></span><br><span class="line">/* &apos;self&apos; is not used */</span><br><span class="line">static PyObject *</span><br><span class="line">py2c_test(PyObject *self, PyObject* args)</span><br><span class="line">&#123;</span><br><span class="line">    const char *command;</span><br><span class="line">    int sts;</span><br><span class="line"></span><br><span class="line">    if (!PyArg_ParseTuple(args, &quot;s&quot;, &amp;command))</span><br><span class="line">        return NULL;</span><br><span class="line">    </span><br><span class="line">    sts = printf(command);</span><br><span class="line">    </span><br><span class="line">    if (sts &lt; 0) &#123;</span><br><span class="line">        PyErr_SetString(py2cError, &quot;py2c test function failed!\n&quot;);</span><br><span class="line">        return NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">    </span><br><span class="line">    return Py_BuildValue(&quot;i&quot;, sts);</span><br><span class="line">    //return PyInt_FromLong(sts);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static PyMethodDef py2c_methods[] = &#123;</span><br><span class="line">    &#123;&quot;test&quot;,		py2c_test,	METH_VARARGS, //METH_NOARGS,</span><br><span class="line">     &quot;print string.&quot;&#125;,</span><br><span class="line">    &#123;NULL,		NULL&#125;		/* sentinel */</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">void</span><br><span class="line">initpy2c(void)</span><br><span class="line">&#123;</span><br><span class="line">    PyObject *m;</span><br><span class="line">    </span><br><span class="line">    PyImport_AddModule(&quot;py2c&quot;);</span><br><span class="line">    </span><br><span class="line">    m = Py_InitModule(&quot;py2c&quot;, py2c_methods);</span><br><span class="line">    if(m==NULL)</span><br><span class="line">        return;</span><br><span class="line">    </span><br><span class="line">    py2cError = PyErr_NewException(&quot;py2c.error&quot;, NULL, NULL);</span><br><span class="line">    Py_INCREF(py2cError);</span><br><span class="line">    PyModule_AddObject(m, &quot;error&quot;, py2cError);</span><br><span class="line">    </span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>Makefile</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># Makefile for embedded Python use py2c.</span><br><span class="line"># edit lines marked with XXX.)</span><br><span class="line"></span><br><span class="line"># XXX The compiler you are using</span><br><span class="line">CC=	 	gcc</span><br><span class="line"></span><br><span class="line"># XXX Top of the build tree and source tree</span><br><span class="line">#srcdir=		../..</span><br><span class="line">#blddir=		../..</span><br><span class="line">srcdir= /usr/local/include</span><br><span class="line">libdir= /usr/local/lib</span><br><span class="line"></span><br><span class="line"># Python version</span><br><span class="line">VERSION=	2.6</span><br><span class="line"></span><br><span class="line"># Compiler flags</span><br><span class="line">OPT=		-g</span><br><span class="line">INCLUDES=	-I$(srcdir)/python$(VERSION) -I$(srcdir)</span><br><span class="line">CFLAGS=		$(OPT)</span><br><span class="line">CPPFLAGS=	$(INCLUDES)</span><br><span class="line"></span><br><span class="line"># The Python library</span><br><span class="line">LIBPYTHON=	$(libdir)/libpython$(VERSION).a</span><br><span class="line">LIBEXTERN=  </span><br><span class="line">#LIBEXTERN=  ./*.a</span><br><span class="line"></span><br><span class="line"># XXX edit LIBS (in particular) to match $(blddir)/Modules/Makefile</span><br><span class="line">#LIBS=		-lnsl -ldl -lreadline -ltermcap -lieee -lpthread -lutil</span><br><span class="line">LIBS=		-lnsl -ldl -lieee -lpthread -lutil</span><br><span class="line">LDFLAGS=	-Xlinker -export-dynamic -static</span><br><span class="line">SYSLIBS=	-lm</span><br><span class="line">MODLIBS=	</span><br><span class="line">ALLLIBS=	$(LIBPYTHON) $(LIBEXTERN) $(MODLIBS) $(LIBS) $(SYSLIBS)</span><br><span class="line"></span><br><span class="line"># Build the py2c applications</span><br><span class="line">all:		clean py2c</span><br><span class="line">py2c:		py2c.o</span><br><span class="line">		$(CC) $(LDFLAGS) py2c.o $(ALLLIBS) -o py2c </span><br><span class="line"></span><br><span class="line"># Administrative targets</span><br><span class="line"></span><br><span class="line">test: py2c</span><br><span class="line">		./py2c</span><br><span class="line"></span><br><span class="line">COMMAND=&quot;print &apos;hello world&apos;&quot;</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">		-rm -f *.o *.so py2c</span><br><span class="line"></span><br><span class="line">clobber:	clean</span><br><span class="line">		-rm -f *~ @* &apos;#&apos;* py2c</span><br><span class="line"></span><br><span class="line">realclean:	clobber</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>setup.py</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from distutils.core import setup, Extension</span><br><span class="line"></span><br><span class="line">module1 = Extension(&apos;py2c&apos;,</span><br><span class="line">                    define_macros = [(&apos;MAJOR_VERSION&apos;, &apos;1&apos;),</span><br><span class="line">                                     (&apos;MINOR_VERSION&apos;, &apos;0&apos;)],</span><br><span class="line">                    #include_dirs = [&apos;/usr/local/include&apos;],</span><br><span class="line">                    #libraries = [&apos;***&apos;],</span><br><span class="line">                    #library_dirs = [&apos;./&apos;],</span><br><span class="line">                    sources = [&apos;py2c.c&apos;])</span><br><span class="line"></span><br><span class="line">setup (name = &apos;py2c&apos;,</span><br><span class="line">       version = &apos;1.0&apos;,</span><br><span class="line">       description = &apos;This is a py2c package&apos;,</span><br><span class="line">       author = &apos;&apos;,</span><br><span class="line">       author_email = &apos;&apos;,</span><br><span class="line">       url = &apos;&apos;,</span><br><span class="line">       long_description = &apos;This is really just a py2c package.&apos;,</span><br><span class="line">       ext_modules = [module1])</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>编译</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python setup.py build</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-使用py2c"><a href="#2-使用py2c" class="headerlink" title="2. 使用py2c"></a><strong>2. 使用py2c</strong></h2><blockquote>
<p>将编译生成的py2c.dll文件改名为py2c.pyd，然后放到python安装目录下的DLLS目录中<br>运行python<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import py2c</span><br></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<p>本文中py2c_test函数还可以调用其他已有的C库，相当于通过py2c调用现有的C库。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 2013 </tag>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
            <tag> x86 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows环境Python调用C库]]></title>
      <url>http://my.fanzicai.com/Program/20130613-Windows%E7%8E%AF%E5%A2%83Python%E8%B0%83%E7%94%A8C%E5%BA%93.html</url>
      <content type="html"><![CDATA[<p>Python调用C库，通常情况下采用<a href="http://starship.python.net/crew/theller/ctypes/" target="_blank" rel="noopener">ctypes</a>模块。本文则采用另外一种方式。</p>
<a id="more"></a>
<h2 id="1-py2c工程"><a href="#1-py2c工程" class="headerlink" title="1. py2c工程"></a><strong>1. py2c工程</strong></h2><p>采用VC创建“py2c”的dll工程。</p>
<blockquote>
<p>将python安装目录下的include，添加到编译环境中<br>将python安装目录下的libs，添加到编译环境中</p>
</blockquote>
<ul>
<li><p>py2c.c</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">// py2c.cpp : Defines the entry point for the DLL application.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#include &quot;stdafx.h&quot;</span><br><span class="line"></span><br><span class="line">#include &lt;Python.h&gt;</span><br><span class="line"></span><br><span class="line">#ifdef __cplusplus</span><br><span class="line">extern &quot;C&quot;&#123;</span><br><span class="line">#endif</span><br><span class="line">	static PyObject *py2c_showMsg(PyObject *self, PyObject *args);</span><br><span class="line">	</span><br><span class="line">	__declspec(dllexport) void initpy2c()</span><br><span class="line">	&#123;</span><br><span class="line">		static PyMethodDef py2cMethods[] = &#123;</span><br><span class="line">			&#123;</span><br><span class="line">				&quot;showMsg&quot;, py2c_showMsg, METH_VARARGS</span><br><span class="line">			&#125;,</span><br><span class="line">			&#123;</span><br><span class="line">				NULL, NULL, NULL</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		PyObject *py2c = Py_InitModule(&quot;py2c&quot;, py2cMethods);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	static PyObject *py2c_showMsg(PyObject *self, PyObject *args)</span><br><span class="line">	&#123;</span><br><span class="line">		const char *msg = NULL;</span><br><span class="line">		</span><br><span class="line">		if(!PyArg_ParseTuple(args,&quot;s&quot;,&amp;msg))</span><br><span class="line">			return NULL;</span><br><span class="line"></span><br><span class="line">		int r = ::MessageBox(NULL, msg, &quot;Caption:Form C module&quot;, MB_ICONINFORMATION | MB_OK);</span><br><span class="line"></span><br><span class="line">		return Py_BuildValue(&quot;i&quot;, r);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#ifdef __cplusplus</span><br><span class="line">&#125;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#pragma comment(lib,&quot;python27.lib&quot;)</span><br><span class="line"></span><br><span class="line">BOOL APIENTRY DllMain( HANDLE hModule, </span><br><span class="line">                       DWORD  ul_reason_for_call, </span><br><span class="line">                       LPVOID lpReserved</span><br><span class="line">					 )</span><br><span class="line">&#123;</span><br><span class="line">    return TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>编译</p>
<blockquote>
<p>编译工程，生成py2c.dll</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-使用py2c"><a href="#2-使用py2c" class="headerlink" title="2. 使用py2c"></a><strong>2. 使用py2c</strong></h2><blockquote>
<p>将编译生成的py2c.dll文件改名为py2c.pyd，然后放到python安装目录下的DLLS目录中<br>运行python<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import py2c</span><br><span class="line">py2c.showMsg(“test msg”)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>运行结果，会弹出窗口显示“test msg”信息</p>
</blockquote>
<hr>
<p>本文为在<strong><em>其他环境</em></strong>下进行“Python调用C库”打下基础。</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> 2013 </tag>
            
            <tag> C </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx中pylons的FCGI发布]]></title>
      <url>http://my.fanzicai.com/Program/20130613-nginx%E4%B8%ADpylons%E7%9A%84FCGI%E5%8F%91%E5%B8%83.html</url>
      <content type="html"><![CDATA[<p><a href="http://nginx.org/" target="_blank" rel="noopener">Nginx</a> (“engine x”) 是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。Nginx是由Igor Sysoev为俄罗斯访问量第二的Rambler.ru站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。</p>
<a id="more"></a>
<h2 id="1-安装环境"><a href="#1-安装环境" class="headerlink" title="1. 安装环境"></a><strong>1. 安装环境</strong></h2><ul>
<li>操作系统<br>SuSE Linux 11, 2.6.32.12-0.7-pae</li>
<li>Nginx<br>nginx-1.5.1.tar.gz</li>
<li>pcre<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvf pcre-8.02.tar.gz</span><br><span class="line">cd pcre-8.02/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-Nginx"><a href="#2-Nginx" class="headerlink" title="2. Nginx"></a><strong>2. Nginx</strong></h2><ul>
<li><p>安装Nginx</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvf nginx-1.5.1.tar.gz</span><br><span class="line">cd nginx-1.5.1/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>修改usr/local/ngnix/conf/nginx.conf</p>
<blockquote>
<p>注释掉行44：root html;<br>注释掉行45：index index.html index.htm;<br>增加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_pass   127.0.0.1:5000;</span><br><span class="line">fastcgi_param  PATH_INFO $fastcgi_script_name;</span><br><span class="line">include        fastcgi_params;</span><br><span class="line">fastcgi_intercept_errors off;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>添加服务</p>
<blockquote>
<p>/etc/init.d目录下创建nginx文件（启动脚本），用于执行/usr/local/nginx/sbin/nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig nginx on</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="3-Pylons"><a href="#3-Pylons" class="headerlink" title="3. Pylons"></a><strong>3. Pylons</strong></h2><p>本文pylons可参照官网方式安装。</p>
<ul>
<li><p>flup</p>
<blockquote>
<p>flup-1.0.3.dev-20110405.tar.gz</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">source pylons/bin/activate</span><br><span class="line">tar xvf flup-1.0.3.dev-20110405.tar.gz</span><br><span class="line">cd flup-1.0.3.dev-20110405</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>development.ini</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[server:main]</span><br><span class="line">        use = egg:Flup#fcgi_thread</span><br><span class="line">        host = 127.0.0.1</span><br><span class="line">        port = 5000</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<p>注：目前pylons已经被<a href="http://www.pylonsproject.org/" target="_blank" rel="noopener">Pyramid</a>替代，建议新的项目应采用<a href="http://www.pylonsproject.org/" target="_blank" rel="noopener">Pyramid</a>.</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2013 </tag>
            
            <tag> Pylons </tag>
            
            <tag> Pyramid </tag>
            
            <tag> Nginx </tag>
            
            <tag> FCGI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[lighttpd中pylons的SCGI发布]]></title>
      <url>http://my.fanzicai.com/Program/20130613-lighttpd%E4%B8%ADpylons%E7%9A%84SCGI%E5%8F%91%E5%B8%83.html</url>
      <content type="html"><![CDATA[<p><a href="https://www.lighttpd.net/" target="_blank" rel="noopener">Lighttpd</a> 是一个德国人领导的开源Web服务器软件，其根本的目的是提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的web server环境。具有非常低的内存开销、cpu占用率低、效能好以及丰富的模块等特点。</p>
<a id="more"></a>
<h2 id="1-安装环境"><a href="#1-安装环境" class="headerlink" title="1. 安装环境"></a><strong>1. 安装环境</strong></h2><ul>
<li>操作系统<br>SuSE Linux 11, 2.6.32.12-0.7-pae</li>
<li>LightTPD<br>lighttpd-1.4.32</li>
</ul>
<hr>
<h2 id="2-LightTPD"><a href="#2-LightTPD" class="headerlink" title="2. LightTPD"></a><strong>2. LightTPD</strong></h2><ul>
<li><p>安装LightTPD</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvf lighttpd-1.4.32.tar.gz</span><br><span class="line">cd lighttpd-1.4.32/</span><br><span class="line">./configure --prefix=/usr/local/lighttpd --without-pcre --without-bzip2</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>添加服务</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp doc/initscripts/rc.lighttpd /etc/init.d/lighttpd</span><br><span class="line">chkconfig lighttpd on</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>修改该文件，行35<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIGHTTPD_BIN=/usr/local/lighttpd/sbin/lighttpd</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>配置文件</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp doc/initscripts/sysconfig.lighttpd /etc/sysconfig/lighttpd</span><br><span class="line">mkdir /etc/lighttpd</span><br><span class="line">cp doc/config/lighttpd.conf /etc/lighttpd/</span><br><span class="line">cp doc/config/modules.conf /etc/lighttpd/</span><br><span class="line">cp –r doc/config/conf.d/ /etc/lighttpd/</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>配置修改</p>
<blockquote>
<p>修改modules.conf，行127增加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include “conf.d/scgi.conf”</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>修改lighttpd.conf，行127增加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.bind = “0.0.0.0”</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>注释掉lighttpd.conf的315~317行，内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#$HTTP[&quot;url&quot;] =~ &quot;\.pdf$&quot; &#123;</span><br><span class="line">#  server.range-requests = &quot;disable&quot;</span><br><span class="line">#&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>修改scgi.conf，增加内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scgi.server = ( &quot;/&quot; =&gt;</span><br><span class="line">                   ((</span><br><span class="line">                        &quot;host&quot; =&gt; &quot;127.0.0.1&quot;,</span><br><span class="line">                        &quot;port&quot; =&gt; 5000,</span><br><span class="line">                        &quot;check-local&quot; =&gt; &quot;disable&quot;,</span><br><span class="line">                        &quot;docroot&quot; =&gt; &quot;/&quot;</span><br><span class="line">                   ))</span><br><span class="line">                )</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>运行服务<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server lighttpd start</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h2 id="3-Pylons"><a href="#3-Pylons" class="headerlink" title="3. Pylons"></a><strong>3. Pylons</strong></h2><p>本文pylons可参照官网方式安装。</p>
<ul>
<li><p>flup</p>
<blockquote>
<p>flup-1.0.3.dev-20110405.tar.gz</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">source pylons/bin/activate</span><br><span class="line">tar xvf flup-1.0.3.dev-20110405.tar.gz</span><br><span class="line">cd flup-1.0.3.dev-20110405</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>development.ini</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[server:main]</span><br><span class="line">        use = egg:PasteScript#flup_scgi_thread</span><br><span class="line">        host = 127.0.0.1</span><br><span class="line">        port = 5000</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<p>注：目前pylons已经被<a href="http://www.pylonsproject.org/" target="_blank" rel="noopener">Pyramid</a>替代，建议新的项目应采用<a href="http://www.pylonsproject.org/" target="_blank" rel="noopener">Pyramid</a>.</p>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2013 </tag>
            
            <tag> LightTPD </tag>
            
            <tag> SCGI </tag>
            
            <tag> Pylons </tag>
            
            <tag> Pyramid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SuSE安装Apache及mod_python模块]]></title>
      <url>http://my.fanzicai.com/Program/20130608-SuSE%E5%AE%89%E8%A3%85Apache%E5%8F%8Amod-python%E6%A8%A1%E5%9D%97.html</url>
      <content type="html"><![CDATA[<p>本文在SuSE 11发行版上源码安装apache以及mod_python模块。</p>
<a id="more"></a>
<h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a><strong>Apache</strong></h2><p>本文采用httpd-2.2.19.tar.gz为例。</p>
<ul>
<li>安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvf httpd-2.2.19.tar.gz</span><br><span class="line">cd httpd*/</span><br><span class="line">./configure --prefix=/usr/local/apache --with-python=/usr/local/bin/python</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>其中，指定了python的执行路径</p>
<ul>
<li>运行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/apache/bin/apachectl -k start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="mod-python"><a href="#mod-python" class="headerlink" title="mod_python"></a><strong>mod_python</strong></h2><p>本文以mod_python-3.3.1.tgz为例</p>
<ul>
<li>安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvf mod_python-3.3.1.tgz</span><br><span class="line">cd mod_python*</span><br><span class="line">./configure --with-apxs=/usr/local/apache/bin/apxs --with-python=/usr/local/bin/python2.6</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>编译中出现错误<br>Connobject.c:142:error:request for member ‘next’ in something not a structure or union<br>需修改mod_python-3.3.1/src/connobject.c文件<br>“!(b==APR_BRIGADE_SENTINEL(b))”<br>修改为：“!(b==APR_BRIGADE_SENTINEL(bb))”</p>
</blockquote>
<ul>
<li>配置<blockquote>
<p>httpd.conf文件中增加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule python_module /usr/local/apache/modules/mod_python.so</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h2><ul>
<li><p>apache/htdocs/目录下，添加文件test/mptest.py</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from mod_python import apache</span><br><span class="line"> </span><br><span class="line">def handler(req):</span><br><span class="line">     req.write(&quot;Hello World!&quot;)</span><br><span class="line">     return apache.OK</span><br></pre></td></tr></table></figure>
</li>
<li><p>httpd.conf配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /usr/local/apache/htdocs/test&gt;</span><br><span class="line">    AllowOverride FileInfo</span><br><span class="line">    AddHandler mod_python .py  #注意：mod_python与“.py”中间有空格</span><br><span class="line">    PythonHandler mptest</span><br><span class="line">    PythonDebug On</span><br><span class="line">    Order allow,deny</span><br><span class="line">     Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;IfModule alias_module&gt;</span><br><span class="line">    ScriptAlias /htdocs/test/ &quot;/usr/local/apache/htdocs/test/&quot;</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>访问<br><a href="http://192.168.100.125:8080/test/mptest.py" target="_blank" rel="noopener">http://192.168.100.125:8080/test/mptest.py</a></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Program </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SuSE </tag>
            
            <tag> Apache </tag>
            
            <tag> Python </tag>
            
            <tag> 2013 </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <url>http://my.fanzicai.com/404.html</url>
      <content type="html"><![CDATA[<html>
    <head><meta name="generator" content="Hexo 3.9.0">
         <meta charset="UTF-8">
         <title>404</title>
    </head>
    <body>
         <script type="text/javascript" src="http://www.qq.com/404/search_children.js" charset="utf-8"></script>
    </body>
</html>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Categories]]></title>
      <url>http://my.fanzicai.com/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[about]]></title>
      <url>http://my.fanzicai.com/about/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tags]]></title>
      <url>http://my.fanzicai.com/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
